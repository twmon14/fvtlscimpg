
-- inv17
-- I) Base case
open INV .
  :id(inv17)
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
  red inv17(init,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

-- II) Inductive cases
--> 1) cert(p,p2,m1,m2)
open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  -- eq c-cert(p,p2,m1,m2) = true .  
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq dst(m1) = p2 .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq choice(m2) \in list(m1) = true .
  red inv3(p,a,b,b3,r1,r2,l,c,i,s) implies inv12(p,a,b,b1,r1,r2,l,c,i,s) implies inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(cert(p,p2,m1,m2),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq dst(m1) = p2 .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq choice(m2) \in list(m1) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(cert(p,p2,m1,m2),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq dst(m1) = p2 .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq (src(m1) = dst(m2)) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(cert(p,p2,m1,m2),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq dst(m1) = p2 .
  eq crt(m2) = p2 .
  eq (src(m2) = p2) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(cert(p,p2,m1,m2),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq dst(m1) = p2 .
  eq (crt(m2) = p2) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(cert(p,p2,m1,m2),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq (dst(m1) = p2) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(cert(p,p2,m1,m2),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(cert(p,p2,m1,m2),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(cert(p,p2,m1,m2),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(cert(p,p2,m1,m2),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(cert(p,p2,m1,m2),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

--> 2) cfin(p,p1,s1,m1,m2,m3,m4) 
open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  -- eq c-cfin(p,p1,s1,m1,m2,m3,m4)  = true .
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq sig(cert(m3)) = sig(ca,dst(m1),pubkey(cert(m3))) .
  eq epms(m4) = epms(pubkey(cert(m3)),pms(p1,dst(m1),s1)) .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(cfin(p,p1,s1,m1,m2,m3,m4),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq sig(cert(m3)) = sig(ca,dst(m1),pubkey(cert(m3))) .
  eq (epms(m4) = epms(pubkey(cert(m3)),pms(p1,dst(m1),s1))) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(cfin(p,p1,s1,m1,m2,m3,m4),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq (sig(cert(m3)) = sig(ca,dst(m1),pubkey(cert(m3)))) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(cfin(p,p1,s1,m1,m2,m3,m4),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq (server(cert(m3)) = dst(m1)) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(cfin(p,p1,s1,m1,m2,m3,m4),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(cfin(p,p1,s1,m1,m2,m3,m4),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq (dst(m3) = p1) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(cfin(p,p1,s1,m1,m2,m3,m4),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq (src(m3) = dst(m1)) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(cfin(p,p1,s1,m1,m2,m3,m4),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq (dst(m2) = p1) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(cfin(p,p1,s1,m1,m2,m3,m4),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq (src(m2) = dst(m1)) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(cfin(p,p1,s1,m1,m2,m3,m4),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq (dst(m4) = dst(m1)) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(cfin(p,p1,s1,m1,m2,m3,m4),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq (src(m4) = p1) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(cfin(p,p1,s1,m1,m2,m3,m4),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq (crt(m4) = p1) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(cfin(p,p1,s1,m1,m2,m3,m4),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq (src(m1) = p1) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(cfin(p,p1,s1,m1,m2,m3,m4),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq (crt(m1) = p1) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(cfin(p,p1,s1,m1,m2,m3,m4),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(cfin(p,p1,s1,m1,m2,m3,m4),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(cfin(p,p1,s1,m1,m2,m3,m4),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(cfin(p,p1,s1,m1,m2,m3,m4),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(cfin(p,p1,s1,m1,m2,m3,m4),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(cfin(p,p1,s1,m1,m2,m3,m4),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(cfin(p,p1,s1,m1,m2,m3,m4),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(cfin(p,p1,s1,m1,m2,m3,m4),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(cfin(p,p1,s1,m1,m2,m3,m4),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

--> 3) cfin2(p,p1,s1,m1,m2)
open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq sid(m1) = sid(m2) .
  eq ss(p,p1,dst(m1),sid(m2)) = none .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(cfin2(p,p1,s1,m1,m2),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,p1,dst(m1),sid(m2)) = none) = false .
  eq choice(ss(p,p1,dst(m1),sid(m2))) = choice(m2) .
  eq pms(ss(p,p1,dst(m1),sid(m2))) = pms(p1,dst(m1),s1) .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(cfin2(p,p1,s1,m1,m2),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,p1,dst(m1),sid(m2)) = none) = false .
  eq choice(ss(p,p1,dst(m1),sid(m2))) = choice(m2) .
  eq (pms(ss(p,p1,dst(m1),sid(m2))) = pms(p1,dst(m1),s1)) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(cfin2(p,p1,s1,m1,m2),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,p1,dst(m1),sid(m2)) = none) = false .
  eq (choice(ss(p,p1,dst(m1),sid(m2))) = choice(m2)) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(cfin2(p,p1,s1,m1,m2),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq (sid(m1) = sid(m2)) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(cfin2(p,p1,s1,m1,m2),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq (dst(m2) = p1) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(cfin2(p,p1,s1,m1,m2),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq (src(m2) = dst(m1)) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(cfin2(p,p1,s1,m1,m2),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq crt(m1) = p1 .
  eq (src(m1) = p1) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(cfin2(p,p1,s1,m1,m2),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq (crt(m1) = p1) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(cfin2(p,p1,s1,m1,m2),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(cfin2(p,p1,s1,m1,m2),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(cfin2(p,p1,s1,m1,m2),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(cfin2(p,p1,s1,m1,m2),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(cfin2(p,p1,s1,m1,m2),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

--> 4) chello(p,p1,p2,r3,l1)
open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op l1 : -> ListOfChoices .
  eq (r3 \in ur(p)) = true .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(chello(p,p1,p2,r3,l1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op l1 : -> ListOfChoices .
  eq (r3 \in ur(p)) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(chello(p,p1,p2,r3,l1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

--> 5) chello2(p,p1,p2,s1,r3,i1) 
open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op s1 : -> Secret .
  op r3 : -> Rand .
  op i1 : -> Sid .
-- assumptions
  eq r3 \in ur(p) = true .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(chello2(p,p1,p2,s1,r3,i1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op s1 : -> Secret .
  op r3 : -> Rand .
  op i1 : -> Sid .
-- assumptions
  eq r3 \in ur(p) = false .
  eq ss(p,p1,p2,i1) = none .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(chello2(p,p1,p2,s1,r3,i1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op s1 : -> Secret .
  op r3 : -> Rand .
  op i1 : -> Sid .
-- assumptions
  eq r3 \in ur(p) = false .
  eq (ss(p,p1,p2,i1) = none) = false .
  eq pms(ss(p,p1,p2,i1)) = pms(p1,p2,s1) .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(chello2(p,p1,p2,s1,r3,i1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op s1 : -> Secret .
  op r3 : -> Rand .
  op i1 : -> Sid .
-- assumptions
  eq r3 \in ur(p) = false .
  eq (ss(p,p1,p2,i1) = none) = false .
  eq (pms(ss(p,p1,p2,i1)) = pms(p1,p2,s1)) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(chello2(p,p1,p2,s1,r3,i1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

--> 6) compl(p,p1,s1,m1,m2,m3,m4,m5,m6) 
open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq src(m6) = dst(m1) .
  eq dst(m6) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq sig(cert(m3)) = sig(ca,server(cert(m3)),pubkey(cert(m3))) .
  eq epms(m4) = epms(pubkey(cert(m3)),pms(p1,dst(m1),s1)) .
  eq ecfin(m5) = ecfin(k(p1,pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(p1,dst(m1),sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq esfin(m6) = esfin(k(dst(m1),pms(epms(m4)),rand(m1),rand(m2)),
                      sfin(p1,dst(m1),sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq src(m6) = dst(m1) .
  eq dst(m6) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq sig(cert(m3)) = sig(ca,server(cert(m3)),pubkey(cert(m3))) .
  eq epms(m4) = epms(pubkey(cert(m3)),pms(p1,dst(m1),s1)) .
  eq ecfin(m5) = ecfin(k(p1,pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(p1,dst(m1),sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq (esfin(m6) = esfin(k(dst(m1),pms(epms(m4)),rand(m1),rand(m2)),
                      sfin(p1,dst(m1),sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4))))) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq src(m6) = dst(m1) .
  eq dst(m6) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq sig(cert(m3)) = sig(ca,server(cert(m3)),pubkey(cert(m3))) .
  eq epms(m4) = epms(pubkey(cert(m3)),pms(p1,dst(m1),s1)) .
  eq (ecfin(m5) = ecfin(k(p1,pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(p1,dst(m1),sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4))))) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq src(m6) = dst(m1) .
  eq dst(m6) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq sig(cert(m3)) = sig(ca,server(cert(m3)),pubkey(cert(m3))) .
  eq (epms(m4) = epms(pubkey(cert(m3)),pms(p1,dst(m1),s1))) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq src(m6) = dst(m1) .
  eq dst(m6) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq (sig(cert(m3)) = sig(ca,server(cert(m3)),pubkey(cert(m3)))) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq src(m6) = dst(m1) .
  eq dst(m6) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq (server(cert(m3)) = dst(m1)) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq src(m6) = dst(m1) .
  eq dst(m6) = p1 .
  eq choice(m2) \in list(m1) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq src(m6) = dst(m1) .
  eq (dst(m6) = p1) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq (src(m6) = dst(m1)) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq (dst(m3) = p1) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq (src(m3) = dst(m1)) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq (dst(m2) = p1) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq (src(m2) = dst(m1)) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq (dst(m5) = dst(m1)) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq (src(m5) = p1) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq (crt(m5) = p1) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq (dst(m4) = dst(m1)) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq (src(m4) = p1) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq (crt(m4) = p1) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq (src(m1) = p1) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq (crt(m1) = p1) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

--> 7) compl2(p,p1,s1,m1,m2,m3,m4)
open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m4) = dst(m1) .
  eq dst(m4) = p1 .
  eq sid(m1) = sid(m2) .
  eq ss(p,p1,dst(m1),sid(m2)) = none .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(compl2(p,p1,s1,m1,m2,m3,m4),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m4) = dst(m1) .
  eq dst(m4) = p1 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,p1,dst(m1),sid(m2)) = none) = false .
  eq choice(ss(p,p1,dst(m1),sid(m2))) = choice(m2) .
  eq pms(ss(p,p1,dst(m1),sid(m2))) = pms(p1,dst(m1),s1) .
  eq ecfin2(m3) = ecfin2(k(p1,pms(p1,dst(m1),s1),rand(m1),rand(m2)),
                      cfin2(p1,dst(m1),sid(m2),choice(m2),rand(m1),rand(m2),pms(p1,dst(m1),s1))) .
  eq esfin2(m4) = esfin2(k(dst(m1),pms(p1,dst(m1),s1),rand(m1),rand(m2)),
                        sfin2(p1,dst(m1),sid(m2),choice(m2),rand(m1),rand(m2),pms(p1,dst(m1),s1))) .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(compl2(p,p1,s1,m1,m2,m3,m4),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m4) = dst(m1) .
  eq dst(m4) = p1 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,p1,dst(m1),sid(m2)) = none) = false .
  eq choice(ss(p,p1,dst(m1),sid(m2))) = choice(m2) .
  eq pms(ss(p,p1,dst(m1),sid(m2))) = pms(p1,dst(m1),s1) .
  eq ecfin2(m3) = ecfin2(k(p1,pms(p1,dst(m1),s1),rand(m1),rand(m2)),
                      cfin2(p1,dst(m1),sid(m2),choice(m2),rand(m1),rand(m2),pms(p1,dst(m1),s1))) .
  eq (esfin2(m4) = esfin2(k(dst(m1),pms(p1,dst(m1),s1),rand(m1),rand(m2)),
                        sfin2(p1,dst(m1),sid(m2),choice(m2),rand(m1),rand(m2),pms(p1,dst(m1),s1)))) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(compl2(p,p1,s1,m1,m2,m3,m4),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m4) = dst(m1) .
  eq dst(m4) = p1 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,p1,dst(m1),sid(m2)) = none) = false .
  eq choice(ss(p,p1,dst(m1),sid(m2))) = choice(m2) .
  eq pms(ss(p,p1,dst(m1),sid(m2))) = pms(p1,dst(m1),s1) .
  eq (ecfin2(m3) = ecfin2(k(p1,pms(p1,dst(m1),s1),rand(m1),rand(m2)),
                      cfin2(p1,dst(m1),sid(m2),choice(m2),rand(m1),rand(m2),pms(p1,dst(m1),s1)))) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(compl2(p,p1,s1,m1,m2,m3,m4),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m4) = dst(m1) .
  eq dst(m4) = p1 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,p1,dst(m1),sid(m2)) = none) = false .
  eq choice(ss(p,p1,dst(m1),sid(m2))) = choice(m2) .
  eq (pms(ss(p,p1,dst(m1),sid(m2))) = pms(p1,dst(m1),s1)) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(compl2(p,p1,s1,m1,m2,m3,m4),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m4) = dst(m1) .
  eq dst(m4) = p1 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,p1,dst(m1),sid(m2)) = none) = false .
  eq (choice(ss(p,p1,dst(m1),sid(m2))) = choice(m2)) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(compl2(p,p1,s1,m1,m2,m3,m4),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m4) = dst(m1) .
  eq dst(m4) = p1 .
  eq (sid(m1) = sid(m2)) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(compl2(p,p1,s1,m1,m2,m3,m4),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m4) = dst(m1) .
  eq (dst(m4) = p1) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(compl2(p,p1,s1,m1,m2,m3,m4),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq (src(m4) = dst(m1)) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(compl2(p,p1,s1,m1,m2,m3,m4),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq (dst(m2) = p1) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(compl2(p,p1,s1,m1,m2,m3,m4),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq (src(m2) = dst(m1)) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(compl2(p,p1,s1,m1,m2,m3,m4),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq (dst(m3) = dst(m1)) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(compl2(p,p1,s1,m1,m2,m3,m4),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq (src(m3) = p1) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(compl2(p,p1,s1,m1,m2,m3,m4),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq (crt(m3) = p1) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(compl2(p,p1,s1,m1,m2,m3,m4),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq (src(m1) = p1) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(compl2(p,p1,s1,m1,m2,m3,m4),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq (crt(m1) = p1) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(compl2(p,p1,s1,m1,m2,m3,m4),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(compl2(p,p1,s1,m1,m2,m3,m4),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(compl2(p,p1,s1,m1,m2,m3,m4),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(compl2(p,p1,s1,m1,m2,m3,m4),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(compl2(p,p1,s1,m1,m2,m3,m4),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(compl2(p,p1,s1,m1,m2,m3,m4),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(compl2(p,p1,s1,m1,m2,m3,m4),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(compl2(p,p1,s1,m1,m2,m3,m4),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(compl2(p,p1,s1,m1,m2,m3,m4),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

--> 8) fakeCert(p,p2,p1,pk,g)
open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq a = intruder .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
    implies inv17(fakeCert(p,p2,p1,pk,g),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq (a = intruder) = false .
  eq b = intruder . 
  eq g = sig(ca,intruder,k) . 
  eq sig(ca,intruder,k) \in csig(nw(p)) = true .

  eq sh(b1,intruder,a,r2,i,c) \in nw(p) = true .
  eq b2 = intruder . 
  eq ct(intruder,intruder,a,cert(intruder,k,sig(ca,intruder,k))) \in nw(p) = true .
  
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
    implies inv17(fakeCert(p,p2,p1,pk,g),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq (a = intruder) = false .
  eq b = intruder . 
  eq g = sig(ca,intruder,k) . 
  eq sig(ca,intruder,k) \in csig(nw(p)) = true .

  eq sh(b1,intruder,a,r2,i,c) \in nw(p) = true .
  eq b2 = intruder . 
  eq ct(intruder,intruder,a,cert(intruder,k,sig(ca,intruder,k))) \in nw(p) = false .

  eq p2 = intruder .
  eq p1 = a .
  eq pk = k .

  eq sf(b3,intruder,a,esfin(k(intruder,pms(a,intruder,s),r1,r2),sfin(a,intruder,i,l,c,r1,r2,pms(a,intruder,s)))) \in nw(p) = true .
  eq sh(intruder,intruder,a,r2,i,c) \in nw(p) = true .
  
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
    implies inv17(fakeCert(p,p2,p1,pk,g),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq (a = intruder) = false .
  eq b = intruder . 
  eq g = sig(ca,intruder,k) . 
  eq sig(ca,intruder,k) \in csig(nw(p)) = true .

  eq sh(b1,intruder,a,r2,i,c) \in nw(p) = true .
  eq b2 = intruder . 
  eq ct(intruder,intruder,a,cert(intruder,k,sig(ca,intruder,k))) \in nw(p) = false .

  eq p2 = intruder .
  eq p1 = a .
  eq pk = k .

  eq sf(b3,intruder,a,esfin(k(intruder,pms(a,intruder,s),r1,r2),sfin(a,intruder,i,l,c,r1,r2,pms(a,intruder,s)))) \in nw(p) = true .
  eq sh(intruder,intruder,a,r2,i,c) \in nw(p) = false .
  
  red inv12(p,a,b,b1,r1,r2,l,c,i,s) implies inv3(p,a,b,b3,r1,r2,l,c,i,s)
    implies inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
    implies inv17(fakeCert(p,p2,p1,pk,g),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq (a = intruder) = false .
  eq b = intruder . 
  eq g = sig(ca,intruder,k) . 
  eq sig(ca,intruder,k) \in csig(nw(p)) = true .

  eq sh(b1,intruder,a,r2,i,c) \in nw(p) = true .
  eq b2 = intruder . 
  eq ct(intruder,intruder,a,cert(intruder,k,sig(ca,intruder,k))) \in nw(p) = false .

  eq p2 = intruder .
  eq p1 = a .
  eq pk = k .

  eq sf(b3,intruder,a,esfin(k(intruder,pms(a,intruder,s),r1,r2),sfin(a,intruder,i,l,c,r1,r2,pms(a,intruder,s)))) \in nw(p) = false .

  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
    implies inv17(fakeCert(p,p2,p1,pk,g),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq (a = intruder) = false .
  eq b = intruder . 
  eq g = sig(ca,intruder,k) . 
  eq sig(ca,intruder,k) \in csig(nw(p)) = true .

  eq sh(b1,intruder,a,r2,i,c) \in nw(p) = true .
  eq b2 = intruder . 
  eq ct(intruder,intruder,a,cert(intruder,k,sig(ca,intruder,k))) \in nw(p) = false .

  eq p2 = intruder .
  eq p1 = a .
  eq (pk = k) = false .
    
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
    implies inv17(fakeCert(p,p2,p1,pk,g),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq (a = intruder) = false .
  eq b = intruder . 
  eq g = sig(ca,intruder,k) . 
  eq sig(ca,intruder,k) \in csig(nw(p)) = true .

  eq sh(b1,intruder,a,r2,i,c) \in nw(p) = true .
  eq b2 = intruder . 
  eq ct(intruder,intruder,a,cert(intruder,k,sig(ca,intruder,k))) \in nw(p) = false .

  eq p2 = intruder .
  eq (p1 = a) = false .
     
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
    implies inv17(fakeCert(p,p2,p1,pk,g),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq (a = intruder) = false .
  eq b = intruder . 
  eq g = sig(ca,intruder,k) . 
  eq sig(ca,intruder,k) \in csig(nw(p)) = true .

  eq sh(b1,intruder,a,r2,i,c) \in nw(p) = true .
  eq b2 = intruder . 
  eq ct(intruder,intruder,a,cert(intruder,k,sig(ca,intruder,k))) \in nw(p) = false .

  eq (p2 = intruder) = false .
    
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
    implies inv17(fakeCert(p,p2,p1,pk,g),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq (a = intruder) = false .
  eq b = intruder . 
  eq g = sig(ca,intruder,k) . 
  eq sig(ca,intruder,k) \in csig(nw(p)) = true .

  eq sh(b1,intruder,a,r2,i,c) \in nw(p) = true .
  eq (b2 = intruder) = false . 
    
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
    implies inv17(fakeCert(p,p2,p1,pk,g),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq (a = intruder) = false .
  eq b = intruder . 
  eq g = sig(ca,intruder,k) . 
  eq sig(ca,intruder,k) \in csig(nw(p)) = true .

  eq sh(b1,intruder,a,r2,i,c) \in nw(p) = false .
    
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
    implies inv17(fakeCert(p,p2,p1,pk,g),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq (a = intruder) = false .
  eq b = intruder . 
  eq g = sig(ca,intruder,k) . 
  eq sig(ca,intruder,k) \in csig(nw(p)) = false .

  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
    implies inv17(fakeCert(p,p2,p1,pk,g),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq (a = intruder) = false .
  eq b = intruder . 
  eq (g = sig(ca,intruder,k)) = false . 
    eq g \in csig(nw(p)) = true .

  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
    implies inv17(fakeCert(p,p2,p1,pk,g),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq (a = intruder) = false .
  eq b = intruder . 
  eq (g = sig(ca,intruder,k)) = false . 
    eq g \in csig(nw(p)) = false .

  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
    implies inv17(fakeCert(p,p2,p1,pk,g),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

-- eq (b = intruder) = false .
open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq (a = intruder) = false .
  eq (b = intruder) = false .
  eq g \in csig(nw(p)) = true . 
  eq g = sig(ca,b,k) .
  eq sig(ca,b,k) \in csig(nw(p)) = true .

  eq p2 = b .
  eq p1 = a .
  eq pk = k .

  eq b2 = intruder .

 eq ct(b,b,a,cert(b,k,sig(ca,b,k)))\in nw(p) = true .
 eq sh(b,b,a,r2,i,c)\in nw(p) = true .
 eq sh(b1,b,a,r2,i,c)\in nw(p) = true .
  eq sf(b3,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))))\in nw(p) = true .

  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
    implies inv17(fakeCert(p,p2,p1,pk,g),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq (a = intruder) = false .
  eq (b = intruder) = false .
  eq g \in csig(nw(p)) = true . 
  eq g = sig(ca,b,k) .
  eq sig(ca,b,k) \in csig(nw(p)) = true .

  eq p2 = b .
  eq p1 = a .
  eq pk = k .

  eq b2 = intruder .

 eq ct(b,b,a,cert(b,k,sig(ca,b,k)))\in nw(p) = true .
 eq sh(b,b,a,r2,i,c)\in nw(p) = true .
 eq sh(b1,b,a,r2,i,c)\in nw(p) = true .
  eq sf(b3,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))))\in nw(p) = false .

  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
    implies inv17(fakeCert(p,p2,p1,pk,g),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq (a = intruder) = false .
  eq (b = intruder) = false .
  eq g \in csig(nw(p)) = true . 
  eq g = sig(ca,b,k) .
  eq sig(ca,b,k) \in csig(nw(p)) = true .

  eq p2 = b .
  eq p1 = a .
  eq pk = k .

  eq b2 = intruder .

 eq ct(b,b,a,cert(b,k,sig(ca,b,k)))\in nw(p) = true .
 eq sh(b,b,a,r2,i,c)\in nw(p) = true .
 eq sh(b1,b,a,r2,i,c)\in nw(p) = false .
 eq k(b) = k .

  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
    implies inv17(fakeCert(p,p2,p1,pk,g),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq (a = intruder) = false .
  eq (b = intruder) = false .
  eq g \in csig(nw(p)) = true . 
  eq g = sig(ca,b,k) .
  eq sig(ca,b,k) \in csig(nw(p)) = true .

  eq p2 = b .
  eq p1 = a .
  eq pk = k .

  eq b2 = intruder .

 eq ct(b,b,a,cert(b,k,sig(ca,b,k)))\in nw(p) = true .
 eq sh(b,b,a,r2,i,c)\in nw(p) = true .
 eq sh(b1,b,a,r2,i,c)\in nw(p) = false .
 eq (k(b) = k) = false .

  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
    implies inv17(fakeCert(p,p2,p1,pk,g),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq (a = intruder) = false .
  eq (b = intruder) = false .
  eq g \in csig(nw(p)) = true . 
  eq g = sig(ca,b,k) .
  eq sig(ca,b,k) \in csig(nw(p)) = true .

  eq p2 = b .
  eq p1 = a .
  eq pk = k .

  eq b2 = intruder .

 eq ct(b,b,a,cert(b,k,sig(ca,b,k)))\in nw(p) = true .
 eq sh(b,b,a,r2,i,c)\in nw(p) = false .

  red inv3(p,a,b,b3,r1,r2,l,c,i,s) implies inv12(p,a,b,b1,r1,r2,l,c,i,s)
    implies inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
    implies inv17(fakeCert(p,p2,p1,pk,g),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq (a = intruder) = false .
  eq (b = intruder) = false .
  eq g \in csig(nw(p)) = true . 
  eq g = sig(ca,b,k) .
  eq sig(ca,b,k) \in csig(nw(p)) = true .

  eq p2 = b .
  eq p1 = a .
  eq pk = k .

  eq b2 = intruder .

 eq ct(b,b,a,cert(b,k,sig(ca,b,k)))\in nw(p) = false .

 eq sh(b1,b,a,r2,i,c)\in nw(p) = true .
  eq sf(b3,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))))\in nw(p) = true .
 eq ct(intruder,b,a,cert(b,k,sig(ca,b,k)))\in nw(p) = true .

  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
    implies inv17(fakeCert(p,p2,p1,pk,g),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq (a = intruder) = false .
  eq (b = intruder) = false .
  eq g \in csig(nw(p)) = true . 
  eq g = sig(ca,b,k) .
  eq sig(ca,b,k) \in csig(nw(p)) = true .

  eq p2 = b .
  eq p1 = a .
  eq pk = k .

  eq b2 = intruder .

 eq ct(b,b,a,cert(b,k,sig(ca,b,k)))\in nw(p) = false .

 eq sh(b1,b,a,r2,i,c)\in nw(p) = true .
  eq sf(b3,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))))\in nw(p) = true .
 eq ct(intruder,b,a,cert(b,k,sig(ca,b,k)))\in nw(p) = false .

 eq sh(b,b,a,r2,i,c)\in nw(p) = true .
  eq sf(b,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s)))) \in nw(p) = true .
  eq k(b) = k .

  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
    implies inv17(fakeCert(p,p2,p1,pk,g),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq (a = intruder) = false .
  eq (b = intruder) = false .
  eq g \in csig(nw(p)) = true . 
  eq g = sig(ca,b,k) .
  eq sig(ca,b,k) \in csig(nw(p)) = true .

  eq p2 = b .
  eq p1 = a .
  eq pk = k .

  eq b2 = intruder .

 eq ct(b,b,a,cert(b,k,sig(ca,b,k)))\in nw(p) = false .

 eq sh(b1,b,a,r2,i,c)\in nw(p) = true .
  eq sf(b3,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))))\in nw(p) = true .
 eq ct(intruder,b,a,cert(b,k,sig(ca,b,k)))\in nw(p) = false .

 eq sh(b,b,a,r2,i,c)\in nw(p) = true .
  eq sf(b,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s)))) \in nw(p) = true .
  eq (k(b) = k) = false .

red inv9(p,b,k) implies inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
    implies inv17(fakeCert(p,p2,p1,pk,g),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq (a = intruder) = false .
  eq (b = intruder) = false .
  eq g \in csig(nw(p)) = true . 
  eq g = sig(ca,b,k) .
  eq sig(ca,b,k) \in csig(nw(p)) = true .

  eq p2 = b .
  eq p1 = a .
  eq pk = k .

  eq b2 = intruder .

 eq ct(b,b,a,cert(b,k,sig(ca,b,k)))\in nw(p) = false .

 eq sh(b1,b,a,r2,i,c)\in nw(p) = true .
  eq sf(b3,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))))\in nw(p) = true .
 eq ct(intruder,b,a,cert(b,k,sig(ca,b,k)))\in nw(p) = false .

 eq sh(b,b,a,r2,i,c)\in nw(p) = true .
  eq sf(b,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s)))) \in nw(p) = false .
     
red inv3(p,a,b,b3,r1,r2,l,c,i,s) implies inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
    implies inv17(fakeCert(p,p2,p1,pk,g),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq (a = intruder) = false .
  eq (b = intruder) = false .
  eq g \in csig(nw(p)) = true . 
  eq g = sig(ca,b,k) .
  eq sig(ca,b,k) \in csig(nw(p)) = true .

  eq p2 = b .
  eq p1 = a .
  eq pk = k .

  eq b2 = intruder .

 eq ct(b,b,a,cert(b,k,sig(ca,b,k)))\in nw(p) = false .

 eq sh(b1,b,a,r2,i,c)\in nw(p) = true .
  eq sf(b3,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))))\in nw(p) = true .
 eq ct(intruder,b,a,cert(b,k,sig(ca,b,k)))\in nw(p) = false .

 eq sh(b,b,a,r2,i,c)\in nw(p) = false .

red inv3(p,a,b,b3,r1,r2,l,c,i,s) implies inv12(p,a,b,b1,r1,r2,l,c,i,s) implies inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
    implies inv17(fakeCert(p,p2,p1,pk,g),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq (a = intruder) = false .
  eq (b = intruder) = false .
  eq g \in csig(nw(p)) = true . 
  eq g = sig(ca,b,k) .
  eq sig(ca,b,k) \in csig(nw(p)) = true .

  eq p2 = b .
  eq p1 = a .
  eq pk = k .

  eq b2 = intruder .

 eq ct(b,b,a,cert(b,k,sig(ca,b,k)))\in nw(p) = false .

 eq sh(b1,b,a,r2,i,c)\in nw(p) = true .
  eq sf(b3,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))))\in nw(p) = false .

  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
    implies inv17(fakeCert(p,p2,p1,pk,g),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq (a = intruder) = false .
  eq (b = intruder) = false .
  eq g \in csig(nw(p)) = true . 
  eq g = sig(ca,b,k) .
  eq sig(ca,b,k) \in csig(nw(p)) = true .

  eq p2 = b .
  eq p1 = a .
  eq pk = k .

  eq b2 = intruder .

 eq ct(b,b,a,cert(b,k,sig(ca,b,k)))\in nw(p) = false .

 eq sh(b1,b,a,r2,i,c)\in nw(p) = false .

  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
    implies inv17(fakeCert(p,p2,p1,pk,g),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq (a = intruder) = false .
  eq (b = intruder) = false .
  eq g \in csig(nw(p)) = true . 
  eq g = sig(ca,b,k) .
  eq sig(ca,b,k) \in csig(nw(p)) = true .

  eq p2 = b .
  eq p1 = a .
  eq pk = k .

  eq (b2 = intruder) = false .

  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
    implies inv17(fakeCert(p,p2,p1,pk,g),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq (a = intruder) = false .
  eq (b = intruder) = false .
  eq g \in csig(nw(p)) = true . 
  eq g = sig(ca,b,k) .
    eq sig(ca,b,k) \in csig(nw(p)) = true .

  eq p2 = b .
  eq p1 = a .
  eq (pk = k) = false .

  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
    implies inv17(fakeCert(p,p2,p1,pk,g),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq (a = intruder) = false .
  eq (b = intruder) = false .
  eq g \in csig(nw(p)) = true . 
  eq g = sig(ca,b,k) .
    eq sig(ca,b,k) \in csig(nw(p)) = true .

  eq p2 = b .
  eq (p1 = a) = false .

  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
    implies inv17(fakeCert(p,p2,p1,pk,g),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq (a = intruder) = false .
  eq (b = intruder) = false .
  eq g \in csig(nw(p)) = true . 
  eq g = sig(ca,b,k) .
    eq sig(ca,b,k) \in csig(nw(p)) = true .

  eq (p2 = b) = false .

  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
    implies inv17(fakeCert(p,p2,p1,pk,g),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq (a = intruder) = false .
  eq (b = intruder) = false .
  eq g \in csig(nw(p)) = true . 
  eq g = sig(ca,b,k) .
    eq sig(ca,b,k) \in csig(nw(p)) = false .

  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
    implies inv17(fakeCert(p,p2,p1,pk,g),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq (a = intruder) = false .
  eq (b = intruder) = false .
  eq g \in csig(nw(p)) = true . 
  eq (g = sig(ca,b,k)) = false .

  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
    implies inv17(fakeCert(p,p2,p1,pk,g),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq (a = intruder) = false .
  eq (b = intruder) = false .
    eq g \in csig(nw(p)) = false .

  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
    implies inv17(fakeCert(p,p2,p1,pk,g),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

--> 9) fakeCfin1(p,p1,p2,ecfin1)
open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op ecfin1 : -> EncCFin .
-- assumptions
  eq ecfin1 \in cecfin(nw(p)) = true .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeCfin1(p,p1,p2,ecfin1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op ecfin1 : -> EncCFin .
-- assumptions
  eq ecfin1 \in cecfin(nw(p)) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeCfin1(p,p1,p2,ecfin1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

--> 10) fakeCfin2(p,p1,p2,i1,l1,c1,r3,r4,pms1)
open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op l1 : -> ListOfChoices .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeCfin2(p,p1,p2,i1,l1,c1,r3,r4,pms1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op l1 : -> ListOfChoices .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeCfin2(p,p1,p2,i1,l1,c1,r3,r4,pms1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

--> 11) fakeCfin21(p,p1,p2,ecfin21)
open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op ecfin21 : -> EncCFin2 .
-- assumptions
  eq ecfin21 \in cecfin2(nw(p)) = true .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeCfin21(p,p1,p2,ecfin21),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op ecfin21 : -> EncCFin2 .
-- assumptions
  eq ecfin21 \in cecfin2(nw(p)) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeCfin21(p,p1,p2,ecfin21),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

--> 12) fakeCfin22(p,p1,p2,i1,c1,r3,r4,pms1)
open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeCfin22(p,p1,p2,i1,c1,r3,r4,pms1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeCfin22(p,p1,p2,i1,c1,r3,r4,pms1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

--> 13) fakeChello(p,p1,p2,r3,l1) 
open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op l1 : -> ListOfChoices .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeChello(p,p1,p2,r3,l1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

--> 14) fakeChello2(p,p1,p2,r3,i1) 
open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeChello2(p,p1,p2,r3,i1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

--> 15) fakeKexch1(p,p1,p2,epms1) 
open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op epms1 : -> EncPms .
-- assumptions
  eq epms1 \in cepms(nw(p)) = true .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeKexch1(p,p1,p2,epms1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op epms1 : -> EncPms .
-- assumptions
  eq epms1 \in cepms(nw(p)) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeKexch1(p,p1,p2,epms1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

--> 16) fakeKexch2(p,p1,p2,pk,pms1)
open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeKexch2(p,p1,p2,pk,pms1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeKexch2(p,p1,p2,pk,pms1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

--> 17) fakeSfin1(p,p2,p1,esfin1)
open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin1 : -> EncSFin .
-- assumptions
    eq esfin1 \in cesfin(nw(p)) = true .
    eq b3 = intruder .
    eq p2 = b .
    eq p1 = a .
    eq esfin1 = esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) .
    eq a = intruder .
    red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeSfin1(p,p2,p1,esfin1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin1 : -> EncSFin .
-- assumptions
    eq esfin1 \in cesfin(nw(p)) = true .
    eq b3 = intruder .
    eq p2 = b .
    eq p1 = a .
    eq esfin1 = esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) .
    eq (a = intruder) = false .
    eq esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) \in cesfin(nw(p)) = true .
    eq ct(b2,b,a,cert(b,k,sig(ca,b,k)))\in nw(p) = true .
    eq sh(b,b,a,r2,i,c)\in nw(p) = true .
    eq sh(b1,b,a,r2,i,c)\in nw(p) = true .
    eq ct(b,b,a,cert(b,k,sig(ca,b,k)))\in nw(p) = true .
    red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeSfin1(p,p2,p1,esfin1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin1 : -> EncSFin .
-- assumptions
    eq esfin1 \in cesfin(nw(p)) = true .
    eq b3 = intruder .
    eq p2 = b .
    eq p1 = a .
    eq esfin1 = esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) .
    eq (a = intruder) = false .
    eq esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) \in cesfin(nw(p)) = true .
    eq ct(b2,b,a,cert(b,k,sig(ca,b,k)))\in nw(p) = true .
    eq sh(b,b,a,r2,i,c)\in nw(p) = true .
    eq sh(b1,b,a,r2,i,c)\in nw(p) = true .
    eq ct(b,b,a,cert(b,k,sig(ca,b,k)))\in nw(p) = false .
    eq sf(intruder,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))))\in nw(p) = true . 
    red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeSfin1(p,p2,p1,esfin1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin1 : -> EncSFin .
-- assumptions
    eq esfin1 \in cesfin(nw(p)) = true .
    eq b3 = intruder .
    eq p2 = b .
    eq p1 = a .
    eq esfin1 = esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) .
    eq (a = intruder) = false .
    eq esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) \in cesfin(nw(p)) = true .
    eq ct(b2,b,a,cert(b,k,sig(ca,b,k)))\in nw(p) = true .
    eq sh(b,b,a,r2,i,c)\in nw(p) = true .
    eq sh(b1,b,a,r2,i,c)\in nw(p) = true .
    eq ct(b,b,a,cert(b,k,sig(ca,b,k)))\in nw(p) = false .
    eq sf(intruder,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))))\in nw(p) = false . 
    eq sf(b,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))))\in nw(p) = true . 
    red inv13(p,a,b,b2,r1,r2,l,c,i,s,k)
    implies inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeSfin1(p,p2,p1,esfin1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) . -- t
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin1 : -> EncSFin .
-- assumptions
    eq esfin1 \in cesfin(nw(p)) = true .
    eq b3 = intruder .
    eq p2 = b .
    eq p1 = a .
    eq esfin1 = esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) .
    eq (a = intruder) = false .
    eq esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) \in cesfin(nw(p)) = true .
    eq ct(b2,b,a,cert(b,k,sig(ca,b,k)))\in nw(p) = true .
    eq sh(b,b,a,r2,i,c)\in nw(p) = true .
    eq sh(b1,b,a,r2,i,c)\in nw(p) = true .
    eq ct(b,b,a,cert(b,k,sig(ca,b,k)))\in nw(p) = false .
    eq sf(intruder,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))))\in nw(p) = false . 
    eq sf(b,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))))\in nw(p) = false .
    red inv4(p,a,b,r1,r2,l,c,i,s) implies inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeSfin1(p,p2,p1,esfin1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin1 : -> EncSFin .
-- assumptions
    eq esfin1 \in cesfin(nw(p)) = true .
    eq b3 = intruder .
    eq p2 = b .
    eq p1 = a .
    eq esfin1 = esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) .
    eq (a = intruder) = false .
    eq esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) \in cesfin(nw(p)) = true .
    eq ct(b2,b,a,cert(b,k,sig(ca,b,k)))\in nw(p) = true .
    eq sh(b,b,a,r2,i,c)\in nw(p) = true .
    eq sh(b1,b,a,r2,i,c)\in nw(p) = false .
    red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeSfin1(p,p2,p1,esfin1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin1 : -> EncSFin .
-- assumptions
    eq esfin1 \in cesfin(nw(p)) = true .
    eq b3 = intruder .
    eq p2 = b .
    eq p1 = a .
    eq esfin1 = esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) .
    eq (a = intruder) = false .
    eq esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) \in cesfin(nw(p)) = true .
    eq ct(b2,b,a,cert(b,k,sig(ca,b,k)))\in nw(p) = true .
    eq sh(b,b,a,r2,i,c)\in nw(p) = false .
    eq sf(intruder,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))))\in nw(p) = true .
    eq sh(b1,b,a,r2,i,c)\in nw(p) = true .
    red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeSfin1(p,p2,p1,esfin1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin1 : -> EncSFin .
-- assumptions
    eq esfin1 \in cesfin(nw(p)) = true .
    eq b3 = intruder .
    eq p2 = b .
    eq p1 = a .
    eq esfin1 = esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) .
    eq (a = intruder) = false .
    eq esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) \in cesfin(nw(p)) = true .
    eq ct(b2,b,a,cert(b,k,sig(ca,b,k)))\in nw(p) = true .
    eq sh(b,b,a,r2,i,c)\in nw(p) = false .
    eq sf(intruder,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))))\in nw(p) = true .
    eq sh(b1,b,a,r2,i,c)\in nw(p) = false .
    red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeSfin1(p,p2,p1,esfin1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin1 : -> EncSFin .
-- assumptions
    eq esfin1 \in cesfin(nw(p)) = true .
    eq b3 = intruder .
    eq p2 = b .
    eq p1 = a .
    eq esfin1 = esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) .
    eq (a = intruder) = false .
    eq esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) \in cesfin(nw(p)) = true .
    eq ct(b2,b,a,cert(b,k,sig(ca,b,k)))\in nw(p) = true .
    eq sh(b,b,a,r2,i,c)\in nw(p) = false .
    eq sf(intruder,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))))\in nw(p) = false .
    eq sh(b1,b,a,r2,i,c)\in nw(p) = true .
    eq sf(b,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))))\in nw(p) = true . 
    red inv12(p,a,b,b1,r1,r2,l,c,i,s)
    implies inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeSfin1(p,p2,p1,esfin1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) . -- t
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin1 : -> EncSFin .
-- assumptions
    eq esfin1 \in cesfin(nw(p)) = true .
    eq b3 = intruder .
    eq p2 = b .
    eq p1 = a .
    eq esfin1 = esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) .
    eq (a = intruder) = false .
    eq esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) \in cesfin(nw(p)) = true .
    eq ct(b2,b,a,cert(b,k,sig(ca,b,k)))\in nw(p) = true .
    eq sh(b,b,a,r2,i,c)\in nw(p) = false .
    eq sf(intruder,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))))\in nw(p) = false .
    eq sh(b1,b,a,r2,i,c)\in nw(p) = true .
    eq sf(b,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))))\in nw(p) = false . 
    red inv4(p,a,b,r1,r2,l,c,i,s) implies inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeSfin1(p,p2,p1,esfin1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin1 : -> EncSFin .
-- assumptions
    eq esfin1 \in cesfin(nw(p)) = true .
    eq b3 = intruder .
    eq p2 = b .
    eq p1 = a .
    eq esfin1 = esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) .
    eq (a = intruder) = false .
    eq esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) \in cesfin(nw(p)) = true .
    eq ct(b2,b,a,cert(b,k,sig(ca,b,k)))\in nw(p) = true .
    eq sh(b,b,a,r2,i,c)\in nw(p) = false .
    eq sf(intruder,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))))\in nw(p) = false .
    eq sh(b1,b,a,r2,i,c)\in nw(p) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeSfin1(p,p2,p1,esfin1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin1 : -> EncSFin .
-- assumptions
    eq esfin1 \in cesfin(nw(p)) = true .
    eq b3 = intruder .
    eq p2 = b .
    eq p1 = a .
    eq esfin1 = esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) .
    eq (a = intruder) = false .
    eq esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) \in cesfin(nw(p)) = true .
    eq ct(b2,b,a,cert(b,k,sig(ca,b,k)))\in nw(p) = false .
    red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeSfin1(p,p2,p1,esfin1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin1 : -> EncSFin .
-- assumptions
    eq esfin1 \in cesfin(nw(p)) = true .
    eq b3 = intruder .
    eq p2 = b .
    eq p1 = a .
    eq esfin1 = esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) .
    eq (a = intruder) = false .
    eq esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) \in cesfin(nw(p)) = false .
    red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeSfin1(p,p2,p1,esfin1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin1 : -> EncSFin .
-- assumptions
    eq esfin1 \in cesfin(nw(p)) = true .
    eq b3 = intruder .
    eq p2 = b .
    eq p1 = a .
    eq (esfin1 = esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s)))) = false .
    red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeSfin1(p,p2,p1,esfin1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin1 : -> EncSFin .
-- assumptions
    eq esfin1 \in cesfin(nw(p)) = true .
    eq b3 = intruder .
    eq p2 = b .
    eq (p1 = a) = false .
    red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeSfin1(p,p2,p1,esfin1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin1 : -> EncSFin .
-- assumptions
    eq esfin1 \in cesfin(nw(p)) = true .
    eq b3 = intruder .
    eq (p2 = b) = false .
    red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeSfin1(p,p2,p1,esfin1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin1 : -> EncSFin .
-- assumptions
    eq esfin1 \in cesfin(nw(p)) = true .
    eq (b3 = intruder) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeSfin1(p,p2,p1,esfin1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin1 : -> EncSFin .
-- assumptions
  eq esfin1 \in cesfin(nw(p)) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeSfin1(p,p2,p1,esfin1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

--> 18) fakeSfin2(p,p2,p1,i1,l1,c1,r3,r4,pms1)
open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op l1 : -> ListOfChoices .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
  eq a = intruder .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeSfin2(p,p2,p1,i1,l1,c1,r3,r4,pms1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op l1 : -> ListOfChoices .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
  eq (a = intruder) = false .
  eq pms1 \in cpms(nw(p)) = true .
  eq b = intruder .
  eq sh(b1,intruder,a,r2,i,c) \in nw(p) = true .
  eq ct(b2,intruder,a,cert(intruder,k,sig(ca,intruder,k))) \in nw(p) = true .
  eq sf(b3,intruder,a,esfin(k(intruder,pms(a,intruder,s),r1,r2),sfin(a,intruder,i,l,c,r1,r2,pms(a,intruder,s)))) \in nw(p) = true .
  eq ct(intruder,intruder,a,cert(intruder,k,sig(ca,intruder,k))) \in nw(p) = true .
  eq sh(intruder,intruder,a,r2,i,c) \in nw(p) = true .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeSfin2(p,p2,p1,i1,l1,c1,r3,r4,pms1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op l1 : -> ListOfChoices .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
  eq (a = intruder) = false .
  eq pms1 \in cpms(nw(p)) = true .
  eq b = intruder .
  eq sh(b1,intruder,a,r2,i,c) \in nw(p) = true .
  eq ct(b2,intruder,a,cert(intruder,k,sig(ca,intruder,k))) \in nw(p) = true .
  eq sf(b3,intruder,a,esfin(k(intruder,pms(a,intruder,s),r1,r2),sfin(a,intruder,i,l,c,r1,r2,pms(a,intruder,s)))) \in nw(p) = true .
  eq ct(intruder,intruder,a,cert(intruder,k,sig(ca,intruder,k))) \in nw(p) = true .
  eq sh(intruder,intruder,a,r2,i,c) \in nw(p) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeSfin2(p,p2,p1,i1,l1,c1,r3,r4,pms1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op l1 : -> ListOfChoices .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
  eq (a = intruder) = false .
  eq pms1 \in cpms(nw(p)) = true .
  eq b = intruder .
  eq sh(b1,intruder,a,r2,i,c) \in nw(p) = true .
  eq ct(b2,intruder,a,cert(intruder,k,sig(ca,intruder,k))) \in nw(p) = true .
  eq sf(b3,intruder,a,esfin(k(intruder,pms(a,intruder,s),r1,r2),sfin(a,intruder,i,l,c,r1,r2,pms(a,intruder,s)))) \in nw(p) = true .
  eq ct(intruder,intruder,a,cert(intruder,k,sig(ca,intruder,k))) \in nw(p) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeSfin2(p,p2,p1,i1,l1,c1,r3,r4,pms1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op l1 : -> ListOfChoices .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
  eq (a = intruder) = false .
  eq pms1 \in cpms(nw(p)) = true .
  eq b = intruder .
  eq sh(b1,intruder,a,r2,i,c) \in nw(p) = true .
  eq ct(b2,intruder,a,cert(intruder,k,sig(ca,intruder,k))) \in nw(p) = true .
  eq sf(b3,intruder,a,esfin(k(intruder,pms(a,intruder,s),r1,r2),sfin(a,intruder,i,l,c,r1,r2,pms(a,intruder,s)))) \in nw(p) = false .
  eq b1 = intruder . 
  eq b2 = intruder .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeSfin2(p,p2,p1,i1,l1,c1,r3,r4,pms1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op l1 : -> ListOfChoices .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
  eq (a = intruder) = false .
  eq pms1 \in cpms(nw(p)) = true .
  eq b = intruder .
  eq sh(b1,intruder,a,r2,i,c) \in nw(p) = true .
  eq ct(b2,intruder,a,cert(intruder,k,sig(ca,intruder,k))) \in nw(p) = true .
  eq sf(b3,intruder,a,esfin(k(intruder,pms(a,intruder,s),r1,r2),sfin(a,intruder,i,l,c,r1,r2,pms(a,intruder,s)))) \in nw(p) = false .
  eq b1 = intruder . 
  eq (b2 = intruder) = false .
  red inv11(p,a,b2,k) implies inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeSfin2(p,p2,p1,i1,l1,c1,r3,r4,pms1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op l1 : -> ListOfChoices .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
  eq (a = intruder) = false .
  eq pms1 \in cpms(nw(p)) = true .
  eq b = intruder .
  eq sh(b1,intruder,a,r2,i,c) \in nw(p) = true .
  eq ct(b2,intruder,a,cert(intruder,k,sig(ca,intruder,k))) \in nw(p) = true .
  eq sf(b3,intruder,a,esfin(k(intruder,pms(a,intruder,s),r1,r2),sfin(a,intruder,i,l,c,r1,r2,pms(a,intruder,s)))) \in nw(p) = false .
  eq (b1 = intruder) = false . 
  red inv10(p,a,b1,r2,c,i) implies inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeSfin2(p,p2,p1,i1,l1,c1,r3,r4,pms1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op l1 : -> ListOfChoices .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
  eq (a = intruder) = false .
  eq pms1 \in cpms(nw(p)) = true .
  eq b = intruder .
  eq sh(b1,intruder,a,r2,i,c) \in nw(p) = true .
  eq ct(b2,intruder,a,cert(intruder,k,sig(ca,intruder,k))) \in nw(p) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeSfin2(p,p2,p1,i1,l1,c1,r3,r4,pms1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op l1 : -> ListOfChoices .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
  eq (a = intruder) = false .
  eq pms1 \in cpms(nw(p)) = true .
  eq b = intruder .
  eq sh(b1,intruder,a,r2,i,c) \in nw(p) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeSfin2(p,p2,p1,i1,l1,c1,r3,r4,pms1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op l1 : -> ListOfChoices .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
  eq (a = intruder) = false .
  eq pms1 \in cpms(nw(p)) = true .
  eq (b = intruder) = false .

  eq pms1 = pms(a,b,s) .
  eq pms(a,b,s) \in cpms(nw(p)) = true .

  red inv1(p,pms(a,b,s)) implies inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeSfin2(p,p2,p1,i1,l1,c1,r3,r4,pms1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op l1 : -> ListOfChoices .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
  eq (a = intruder) = false .
  eq pms1 \in cpms(nw(p)) = true .
  eq (b = intruder) = false .

  eq pms1 = pms(a,b,s) .
  eq pms(a,b,s) \in cpms(nw(p)) = false .

  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeSfin2(p,p2,p1,i1,l1,c1,r3,r4,pms1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op l1 : -> ListOfChoices .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
  eq (a = intruder) = false .
  eq pms1 \in cpms(nw(p)) = true .
  eq (b = intruder) = false .

  eq (pms1 = pms(a,b,s)) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeSfin2(p,p2,p1,i1,l1,c1,r3,r4,pms1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op l1 : -> ListOfChoices .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
  eq (a = intruder) = false .
  eq pms1 \in cpms(nw(p)) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeSfin2(p,p2,p1,i1,l1,c1,r3,r4,pms1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

--> 19) fakeSfin21(p,p2,p1,esfin21)
open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin21 : -> EncSFin2 .
-- assumptions
  eq esfin21 \in cesfin2(nw(p)) = true .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeSfin21(p,p2,p1,esfin21),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin21 : -> EncSFin2 .
-- assumptions
  eq esfin21 \in cesfin2(nw(p)) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeSfin21(p,p2,p1,esfin21),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

--> 20) fakeSfin22(p,p2,p1,i1,c1,r3,r4,pms1)
open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeSfin22(p,p2,p1,i1,c1,r3,r4,pms1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeSfin22(p,p2,p1,i1,c1,r3,r4,pms1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

-- c21i17

--> 21) fakeShello(p,p2,p1,r3,i1,c1)
open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  eq a = intruder .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  eq (a = intruder) = false .
  eq c = c1 .
  eq a = p1 .
  eq b = p2 .
  eq r2 = r3 .
  eq i = i1 .
  eq p1 = intruder .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  eq (a = intruder) = false .
  eq c = c1 .
  eq a = p1 .
  eq b = p2 .
  eq r2 = r3 .
  eq i = i1 .    
  eq (p1 = intruder) = false . 
  eq p2 = intruder .

  eq sf(intruder,intruder,p1,esfin(k(intruder,pms(p1,intruder,s),r1,r3),sfin(p1,intruder,i1,l,c1,r1,r3,pms(p1,intruder,s)))) \in nw(p) = true .
  red inv13(p,a,b,b2,r1,r2,l,c,i,s,k) 
  implies inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  eq (a = intruder) = false .
  eq c = c1 .
  eq a = p1 .
  eq b = p2 .
  eq r2 = r3 .
  eq i = i1 .    
  eq (p1 = intruder) = false . 
  eq p2 = intruder .

  eq sf(intruder,intruder,p1,esfin(k(intruder,pms(p1,intruder,s),r1,r3),sfin(p1,intruder,i1,l,c1,r1,r3,pms(p1,intruder,s)))) \in nw(p) = false .
  eq sf(b3,intruder,p1,esfin(k(intruder,pms(p1,intruder,s),r1,r3),sfin(p1,intruder,i1,l,c1,r1,r3,pms(p1,intruder,s)))) \in nw(p) = true .
  red inv3(p,a,b,b3,r1,r2,l,c,i,s) 
  implies inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  eq (a = intruder) = false .
  eq c = c1 .
  eq a = p1 .
  eq b = p2 .
  eq r2 = r3 .
  eq i = i1 .    
  eq (p1 = intruder) = false . 
  eq p2 = intruder .

  eq sf(intruder,intruder,p1,esfin(k(intruder,pms(p1,intruder,s),r1,r3),sfin(p1,intruder,i1,l,c1,r1,r3,pms(p1,intruder,s)))) \in nw(p) = false .
  eq sf(b3,intruder,p1,esfin(k(intruder,pms(p1,intruder,s),r1,r3),sfin(p1,intruder,i1,l,c1,r1,r3,pms(p1,intruder,s)))) \in nw(p) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  eq (a = intruder) = false .
  eq c = c1 .
  eq a = p1 .
  eq b = p2 .
  eq r2 = r3 .
  eq i = i1 .
  eq (p1 = intruder) = false .
  eq (p2 = intruder) = false .
  eq pms(p1,p2,s)\in cpms(nw(p)) = true .
  red inv1(p,pms(a,b,s))
    implies inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  eq (a = intruder) = false .
  eq c = c1 .
  eq a = p1 .
  eq b = p2 .
  eq r2 = r3 .
  eq i = i1 .
  eq (p1 = intruder) = false .
  eq (p2 = intruder) = false .
  eq pms(p1,p2,s)\in cpms(nw(p)) = false .
  eq ct(p2,p2,p1,cert(p2,k,sig(ca,p2,k)))\in nw(p) = true .
  eq sf(b3,p2,p1,esfin(k(p2,pms(p1,p2,s),r1,r3),sfin(p1,p2,i1,l,c1,r1,r3,pms(p1,p2,s))))\in nw(p) = true .
  eq sh(p2,p2,p1,r3,i1,c1)\in nw(p) = true .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  eq (a = intruder) = false .
  eq c = c1 .
  eq a = p1 .
  eq b = p2 .
  eq r2 = r3 .
  eq i = i1 .
  eq (p1 = intruder) = false .
  eq (p2 = intruder) = false .
  eq pms(p1,p2,s)\in cpms(nw(p)) = false .
  eq ct(p2,p2,p1,cert(p2,k,sig(ca,p2,k)))\in nw(p) = true .
  eq sf(b3,p2,p1,esfin(k(p2,pms(p1,p2,s),r1,r3),sfin(p1,p2,i1,l,c1,r1,r3,pms(p1,p2,s))))\in nw(p) = true .
  eq sh(p2,p2,p1,r3,i1,c1)\in nw(p) = false .
  eq b1 = intruder .
  eq sf(p2,p2,p1,esfin(k(p2,pms(p1,p2,s),r1,r3),sfin(p1,p2,i1,l,c1,r1,r3,pms(p1,p2,s))))\in nw(p) = true .
  eq ct(b2,p2,p1,cert(p2,k,sig(ca,p2,k)))\in nw(p) = true .
  eq sh(intruder,p2,p1,r3,i1,c1)\in nw(p) = true .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  eq (a = intruder) = false .
  eq c = c1 .
  eq a = p1 .
  eq b = p2 .
  eq r2 = r3 .
  eq i = i1 .
  eq (p1 = intruder) = false .
  eq (p2 = intruder) = false .
  eq pms(p1,p2,s)\in cpms(nw(p)) = false .
  eq ct(p2,p2,p1,cert(p2,k,sig(ca,p2,k)))\in nw(p) = true .
  eq sf(b3,p2,p1,esfin(k(p2,pms(p1,p2,s),r1,r3),sfin(p1,p2,i1,l,c1,r1,r3,pms(p1,p2,s))))\in nw(p) = true .
  eq sh(p2,p2,p1,r3,i1,c1)\in nw(p) = false .
  eq b1 = intruder .
  eq sf(p2,p2,p1,esfin(k(p2,pms(p1,p2,s),r1,r3),sfin(p1,p2,i1,l,c1,r1,r3,pms(p1,p2,s))))\in nw(p) = true .
  eq ct(b2,p2,p1,cert(p2,k,sig(ca,p2,k)))\in nw(p) = true .
  eq sh(intruder,p2,p1,r3,i1,c1)\in nw(p) = false .
  red inv7(p,a,b,r1,r2,l,c,i,s)
    implies inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  eq (a = intruder) = false .
  eq c = c1 .
  eq a = p1 .
  eq b = p2 .
  eq r2 = r3 .
  eq i = i1 .
  eq (p1 = intruder) = false .
  eq (p2 = intruder) = false .
  eq pms(p1,p2,s)\in cpms(nw(p)) = false .
  eq ct(p2,p2,p1,cert(p2,k,sig(ca,p2,k)))\in nw(p) = true .
  eq sf(b3,p2,p1,esfin(k(p2,pms(p1,p2,s),r1,r3),sfin(p1,p2,i1,l,c1,r1,r3,pms(p1,p2,s))))\in nw(p) = true .
  eq sh(p2,p2,p1,r3,i1,c1)\in nw(p) = false .
  eq b1 = intruder .
  eq sf(p2,p2,p1,esfin(k(p2,pms(p1,p2,s),r1,r3),sfin(p1,p2,i1,l,c1,r1,r3,pms(p1,p2,s))))\in nw(p) = true .
  eq ct(b2,p2,p1,cert(p2,k,sig(ca,p2,k)))\in nw(p) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  eq (a = intruder) = false .
  eq c = c1 .
  eq a = p1 .
  eq b = p2 .
  eq r2 = r3 .
  eq i = i1 .
  eq (p1 = intruder) = false .
  eq (p2 = intruder) = false .
  eq pms(p1,p2,s)\in cpms(nw(p)) = false .
  eq ct(p2,p2,p1,cert(p2,k,sig(ca,p2,k)))\in nw(p) = true .
  eq sf(b3,p2,p1,esfin(k(p2,pms(p1,p2,s),r1,r3),sfin(p1,p2,i1,l,c1,r1,r3,pms(p1,p2,s))))\in nw(p) = true .
  eq sh(p2,p2,p1,r3,i1,c1)\in nw(p) = false .
  eq b1 = intruder .
  eq sf(p2,p2,p1,esfin(k(p2,pms(p1,p2,s),r1,r3),sfin(p1,p2,i1,l,c1,r1,r3,pms(p1,p2,s))))\in nw(p) = false .
  red inv3(p,a,b,b3,r1,r2,l,c,i,s)
    implies inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  eq (a = intruder) = false .
  eq c = c1 .
  eq a = p1 .
  eq b = p2 .
  eq r2 = r3 .
  eq i = i1 .
  eq (p1 = intruder) = false .
  eq (p2 = intruder) = false .
  eq pms(p1,p2,s)\in cpms(nw(p)) = false .
  eq ct(p2,p2,p1,cert(p2,k,sig(ca,p2,k)))\in nw(p) = true .
  eq sf(b3,p2,p1,esfin(k(p2,pms(p1,p2,s),r1,r3),sfin(p1,p2,i1,l,c1,r1,r3,pms(p1,p2,s))))\in nw(p) = true .
  eq sh(p2,p2,p1,r3,i1,c1)\in nw(p) = false .
  eq (b1 = intruder) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  eq (a = intruder) = false .
  eq c = c1 .
  eq a = p1 .
  eq b = p2 .
  eq r2 = r3 .
  eq i = i1 .
  eq (p1 = intruder) = false .
  eq (p2 = intruder) = false .
  eq pms(p1,p2,s)\in cpms(nw(p)) = false .
  eq ct(p2,p2,p1,cert(p2,k,sig(ca,p2,k)))\in nw(p) = true .
  eq sf(b3,p2,p1,esfin(k(p2,pms(p1,p2,s),r1,r3),sfin(p1,p2,i1,l,c1,r1,r3,pms(p1,p2,s))))\in nw(p) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  eq (a = intruder) = false .
  eq c = c1 .
  eq a = p1 .
  eq b = p2 .
  eq r2 = r3 .
  eq i = i1 .
  eq (p1 = intruder) = false .
  eq (p2 = intruder) = false .
  eq pms(p1,p2,s)\in cpms(nw(p)) = false .
  eq ct(p2,p2,p1,cert(p2,k,sig(ca,p2,k)))\in nw(p) = false .

  eq sf(p2,p2,p1,esfin(k(p2,pms(p1,p2,s),r1,r3),sfin(p1,p2,i1,l,c1,r1,r3,pms(p1,p2,s)))) \in nw(p) = true .  
  red inv13(p,a,b,b2,r1,r2,l,c,i,s,k) 
  implies inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  eq (a = intruder) = false .
  eq c = c1 .
  eq a = p1 .
  eq b = p2 .
  eq r2 = r3 .
  eq i = i1 .
  eq (p1 = intruder) = false .
  eq (p2 = intruder) = false .
  eq pms(p1,p2,s)\in cpms(nw(p)) = false .
  eq ct(p2,p2,p1,cert(p2,k,sig(ca,p2,k)))\in nw(p) = false .

  eq sf(p2,p2,p1,esfin(k(p2,pms(p1,p2,s),r1,r3),sfin(p1,p2,i1,l,c1,r1,r3,pms(p1,p2,s)))) \in nw(p) = false .
  eq sf(b3,p2,p1,esfin(k(p2,pms(p1,p2,s),r1,r3),sfin(p1,p2,i1,l,c1,r1,r3,pms(p1,p2,s)))) \in nw(p) = true .
  red inv3(p,a,b,b3,r1,r2,l,c,i,s) 
  implies inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  eq (a = intruder) = false .
  eq c = c1 .
  eq a = p1 .
  eq b = p2 .
  eq r2 = r3 .
  eq i = i1 .
  eq (p1 = intruder) = false .
  eq (p2 = intruder) = false .
  eq pms(p1,p2,s)\in cpms(nw(p)) = false .
  eq ct(p2,p2,p1,cert(p2,k,sig(ca,p2,k)))\in nw(p) = false .

  eq sf(p2,p2,p1,esfin(k(p2,pms(p1,p2,s),r1,r3),sfin(p1,p2,i1,l,c1,r1,r3,pms(p1,p2,s)))) \in nw(p) = false .
  eq sf(b3,p2,p1,esfin(k(p2,pms(p1,p2,s),r1,r3),sfin(p1,p2,i1,l,c1,r1,r3,pms(p1,p2,s)))) \in nw(p) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  eq (a = intruder) = false .
  eq c = c1 .
  eq a = p1 .
  eq b = p2 .
  eq r2 = r3 .
  eq (i = i1) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  eq (a = intruder) = false .
  eq c = c1 .
  eq a = p1 .
  eq b = p2 .
  eq (r2 = r3) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  eq (a = intruder) = false .
  eq c = c1 .
  eq a = p1 .
  eq (b = p2) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  eq (a = intruder) = false .
  eq c = c1 .
  eq (a = p1) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  eq (a = intruder) = false .
  eq (c = c1) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

--> 22) fakeShello2(p,p2,p1,r3,i1,c1)
open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello2(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

--> 23) kexch(p,p1,s1,m1,m2,m3)
open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = true .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(kexch(p,p1,s1,m1,m2,m3),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq sig(cert(m3)) = sig(ca,dst(m1),pubkey(cert(m3))) .
--
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(kexch(p,p1,s1,m1,m2,m3),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq (sig(cert(m3)) = sig(ca,dst(m1),pubkey(cert(m3)))) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(kexch(p,p1,s1,m1,m2,m3),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq (server(cert(m3)) = dst(m1)) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(kexch(p,p1,s1,m1,m2,m3),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(kexch(p,p1,s1,m1,m2,m3),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq (dst(m3) = p1) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(kexch(p,p1,s1,m1,m2,m3),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq (src(m3) = dst(m1)) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(kexch(p,p1,s1,m1,m2,m3),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq (dst(m2) = p1) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(kexch(p,p1,s1,m1,m2,m3),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq (src(m2) = dst(m1)) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(kexch(p,p1,s1,m1,m2,m3),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq (src(m1) = p1) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(kexch(p,p1,s1,m1,m2,m3),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq (crt(m1) = p1) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(kexch(p,p1,s1,m1,m2,m3),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(kexch(p,p1,s1,m1,m2,m3),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(kexch(p,p1,s1,m1,m2,m3),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(kexch(p,p1,s1,m1,m2,m3),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(kexch(p,p1,s1,m1,m2,m3),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(kexch(p,p1,s1,m1,m2,m3),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(kexch(p,p1,s1,m1,m2,m3),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

--> 24) sfin(p,p2,m1,m2,m3,m4,m5) 
open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .

  eq src(m2) = p2 .
  eq src(m3) = p2 .
  eq src(m1) = dst(m2) .
  eq src(m4) = dst(m2) .
  eq src(m5) = dst(m2) .
  eq choice(m2) \in list(m1) = true .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq dst(m5) = p2 .
  eq dst(m4) = p2 .
  eq dst(m1) = p2 .
  eq dst(m3) = dst(m2) .
  eq crt(m3) = p2 .
  eq crt(m2) = p2 .

  eq a = intruder .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
  implies inv17(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .

  eq src(m2) = p2 .
  eq src(m3) = p2 .
  eq src(m1) = dst(m2) .
  eq src(m4) = dst(m2) .
  eq src(m5) = dst(m2) .
  eq choice(m2) \in list(m1) = true .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq dst(m5) = p2 .
  eq dst(m4) = p2 .
  eq dst(m1) = p2 .
  eq dst(m3) = dst(m2) .
  eq crt(m3) = p2 .
  eq crt(m2) = p2 .

  eq (a = intruder) = false .
  eq sh(b1,b,a,r2,i,c) \in nw(p) = true .
  eq ct(b2,b,a,cert(b,k,sig(ca,b,k))) \in nw(p) = true .
  eq sf(b3,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s)))) \in nw(p) = true .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
  implies inv17(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .

  eq src(m2) = p2 .
  eq src(m3) = p2 .
  eq src(m1) = dst(m2) .
  eq src(m4) = dst(m2) .
  eq src(m5) = dst(m2) .
  eq choice(m2) \in list(m1) = true .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq dst(m5) = p2 .
  eq dst(m4) = p2 .
  eq dst(m1) = p2 .
  eq dst(m3) = dst(m2) .
  eq crt(m3) = p2 .
  eq crt(m2) = p2 .

  eq (a = intruder) = false .
  eq sh(b1,b,a,r2,i,c) \in nw(p) = true .
  eq ct(b2,b,a,cert(b,k,sig(ca,b,k))) \in nw(p) = true .
  eq sf(b3,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s)))) \in nw(p) = false .

  eq choice(m2) = c .
  eq list(m1) = l .
  eq c \in l = true .
  eq dst(m2) = a . 
  eq rand(m2) = r2 .
  eq sid(m2) = i .
  eq b = p2 .
  eq b3 = p2 .
  eq rand(m1) = r1 .
  eq pms(epms(m4)) = pms(a,p2,s) .
  
  eq b1 = p2 .
  eq b2 = p2 .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
  implies inv17(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .

  eq src(m2) = p2 .
  eq src(m3) = p2 .
  eq src(m1) = dst(m2) .
  eq src(m4) = dst(m2) .
  eq src(m5) = dst(m2) .
  eq choice(m2) \in list(m1) = true .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq dst(m5) = p2 .
  eq dst(m4) = p2 .
  eq dst(m1) = p2 .
  eq dst(m3) = dst(m2) .
  eq crt(m3) = p2 .
  eq crt(m2) = p2 .

  eq (a = intruder) = false .
  eq sh(b1,b,a,r2,i,c) \in nw(p) = true .
  eq ct(b2,b,a,cert(b,k,sig(ca,b,k))) \in nw(p) = true .
  eq sf(b3,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s)))) \in nw(p) = false .

  eq choice(m2) = c .
  eq list(m1) = l .
  eq c \in l = true .
  eq dst(m2) = a . 
  eq rand(m2) = r2 .
  eq sid(m2) = i .
  eq b = p2 .
  eq b3 = p2 .
  eq rand(m1) = r1 .
  eq pms(epms(m4)) = pms(a,p2,s) .
  
  eq b1 = p2 .
  eq (b2 = p2) = false .
  eq ct(p2,p2,a,cert(p2,k,sig(ca,p2,k))) \in nw(p) = true .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
  implies inv17(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .

  eq src(m2) = p2 .
  eq src(m3) = p2 .
  eq src(m1) = dst(m2) .
  eq src(m4) = dst(m2) .
  eq src(m5) = dst(m2) .
  eq choice(m2) \in list(m1) = true .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq dst(m5) = p2 .
  eq dst(m4) = p2 .
  eq dst(m1) = p2 .
  eq dst(m3) = dst(m2) .
  eq crt(m3) = p2 .
  eq crt(m2) = p2 .

  eq (a = intruder) = false .
  eq sh(b1,b,a,r2,i,c) \in nw(p) = true .
  eq ct(b2,b,a,cert(b,k,sig(ca,b,k))) \in nw(p) = true .
  eq sf(b3,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s)))) \in nw(p) = false .

  eq choice(m2) = c .
  eq list(m1) = l .
  eq c \in l = true .
  eq dst(m2) = a . 
  eq rand(m2) = r2 .
  eq sid(m2) = i .
  eq b = p2 .
  eq b3 = p2 .
  eq rand(m1) = r1 .
  eq pms(epms(m4)) = pms(a,p2,s) .
  
  eq b1 = p2 .
  eq (b2 = p2) = false .
  eq ct(p2,p2,a,cert(p2,k,sig(ca,p2,k))) \in nw(p) = false .
  eq k(p2) = k .
  red lm1(m3, ct(p2,p2,a,cert(p2,k,sig(ca,p2,k))), nw(p)) implies inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
  implies inv17(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .

  eq src(m2) = p2 .
  eq src(m3) = p2 .
  eq src(m1) = dst(m2) .
  eq src(m4) = dst(m2) .
  eq src(m5) = dst(m2) .
  eq choice(m2) \in list(m1) = true .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq dst(m5) = p2 .
  eq dst(m4) = p2 .
  eq dst(m1) = p2 .
  eq dst(m3) = dst(m2) .
  eq crt(m3) = p2 .
  eq crt(m2) = p2 .

  eq (a = intruder) = false .
  eq sh(b1,b,a,r2,i,c) \in nw(p) = true .
  eq ct(b2,b,a,cert(b,k,sig(ca,b,k))) \in nw(p) = true .
  eq sf(b3,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s)))) \in nw(p) = false .

  eq choice(m2) = c .
  eq list(m1) = l .
  eq c \in l = true .
  eq dst(m2) = a . 
  eq rand(m2) = r2 .
  eq sid(m2) = i .
  eq b = p2 .
  eq b3 = p2 .
  eq rand(m1) = r1 .
  eq pms(epms(m4)) = pms(a,p2,s) .
  
  eq b1 = p2 .
  eq (b2 = p2) = false .
  eq ct(p2,p2,a,cert(p2,k,sig(ca,p2,k))) \in nw(p) = false .
  eq (k(p2) = k) = false .
  eq p2 = intruder .
  eq b2 = intruder .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
  implies inv17(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .

  eq src(m2) = p2 .
  eq src(m3) = p2 .
  eq src(m1) = dst(m2) .
  eq src(m4) = dst(m2) .
  eq src(m5) = dst(m2) .
  eq choice(m2) \in list(m1) = true .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq dst(m5) = p2 .
  eq dst(m4) = p2 .
  eq dst(m1) = p2 .
  eq dst(m3) = dst(m2) .
  eq crt(m3) = p2 .
  eq crt(m2) = p2 .

  eq (a = intruder) = false .
  eq sh(b1,b,a,r2,i,c) \in nw(p) = true .
  eq ct(b2,b,a,cert(b,k,sig(ca,b,k))) \in nw(p) = true .
  eq sf(b3,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s)))) \in nw(p) = false .

  eq choice(m2) = c .
  eq list(m1) = l .
  eq c \in l = true .
  eq dst(m2) = a . 
  eq rand(m2) = r2 .
  eq sid(m2) = i .
  eq b = p2 .
  eq b3 = p2 .
  eq rand(m1) = r1 .
  eq pms(epms(m4)) = pms(a,p2,s) .
  
  eq b1 = p2 .
  eq (b2 = p2) = false .
  eq ct(p2,p2,a,cert(p2,k,sig(ca,p2,k))) \in nw(p) = false .
  eq (k(p2) = k) = false .
  eq p2 = intruder .
  eq (b2 = intruder) = false .
  red inv11(p,a,b2,k) implies inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
  implies inv17(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .

  eq src(m2) = p2 .
  eq src(m3) = p2 .
  eq src(m1) = dst(m2) .
  eq src(m4) = dst(m2) .
  eq src(m5) = dst(m2) .
  eq choice(m2) \in list(m1) = true .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq dst(m5) = p2 .
  eq dst(m4) = p2 .
  eq dst(m1) = p2 .
  eq dst(m3) = dst(m2) .
  eq crt(m3) = p2 .
  eq crt(m2) = p2 .

  eq (a = intruder) = false .
  eq sh(b1,b,a,r2,i,c) \in nw(p) = true .
  eq ct(b2,b,a,cert(b,k,sig(ca,b,k))) \in nw(p) = true .
  eq sf(b3,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s)))) \in nw(p) = false .

  eq choice(m2) = c .
  eq list(m1) = l .
  eq c \in l = true .
  eq dst(m2) = a . 
  eq rand(m2) = r2 .
  eq sid(m2) = i .
  eq b = p2 .
  eq b3 = p2 .
  eq rand(m1) = r1 .
  eq pms(epms(m4)) = pms(a,p2,s) .
  
  eq b1 = p2 .
  eq (b2 = p2) = false .
  eq ct(p2,p2,a,cert(p2,k,sig(ca,p2,k))) \in nw(p) = false .
  eq (k(p2) = k) = false .
  eq (p2 = intruder) = false .
  eq sig(ca,p2,k) \in csig(nw(p)) = true .
  red inv9(p,b,k) implies inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
  implies inv17(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .

  eq src(m2) = p2 .
  eq src(m3) = p2 .
  eq src(m1) = dst(m2) .
  eq src(m4) = dst(m2) .
  eq src(m5) = dst(m2) .
  eq choice(m2) \in list(m1) = true .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq dst(m5) = p2 .
  eq dst(m4) = p2 .
  eq dst(m1) = p2 .
  eq dst(m3) = dst(m2) .
  eq crt(m3) = p2 .
  eq crt(m2) = p2 .

  eq (a = intruder) = false .
  eq sh(b1,b,a,r2,i,c) \in nw(p) = true .
  eq ct(b2,b,a,cert(b,k,sig(ca,b,k))) \in nw(p) = true .
  eq sf(b3,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s)))) \in nw(p) = false .

  eq choice(m2) = c .
  eq list(m1) = l .
  eq c \in l = true .
  eq dst(m2) = a . 
  eq rand(m2) = r2 .
  eq sid(m2) = i .
  eq b = p2 .
  eq b3 = p2 .
  eq rand(m1) = r1 .
  eq pms(epms(m4)) = pms(a,p2,s) .
  
  eq b1 = p2 .
  eq (b2 = p2) = false .
  eq ct(p2,p2,a,cert(p2,k,sig(ca,p2,k))) \in nw(p) = false .
  eq (k(p2) = k) = false .
  eq (p2 = intruder) = false .
  eq sig(ca,p2,k) \in csig(nw(p)) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
  implies inv17(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .

  eq src(m2) = p2 .
  eq src(m3) = p2 .
  eq src(m1) = dst(m2) .
  eq src(m4) = dst(m2) .
  eq src(m5) = dst(m2) .
  eq choice(m2) \in list(m1) = true .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq dst(m5) = p2 .
  eq dst(m4) = p2 .
  eq dst(m1) = p2 .
  eq dst(m3) = dst(m2) .
  eq crt(m3) = p2 .
  eq crt(m2) = p2 .

  eq (a = intruder) = false .
  eq sh(b1,b,a,r2,i,c) \in nw(p) = true .
  eq ct(b2,b,a,cert(b,k,sig(ca,b,k))) \in nw(p) = true .
  eq sf(b3,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s)))) \in nw(p) = false .

  eq choice(m2) = c .
  eq list(m1) = l .
  eq c \in l = true .
  eq dst(m2) = a . 
  eq rand(m2) = r2 .
  eq sid(m2) = i .
  eq b = p2 .
  eq b3 = p2 .
  eq rand(m1) = r1 .
  eq pms(epms(m4)) = pms(a,p2,s) .
  
  eq (b1 = p2) = false .
  eq b2 = p2 .
  eq sh(p2,p2,a,r2,i,c) \in nw(p) = true .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
  implies inv17(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .

  eq src(m2) = p2 .
  eq src(m3) = p2 .
  eq src(m1) = dst(m2) .
  eq src(m4) = dst(m2) .
  eq src(m5) = dst(m2) .
  eq choice(m2) \in list(m1) = true .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq dst(m5) = p2 .
  eq dst(m4) = p2 .
  eq dst(m1) = p2 .
  eq dst(m3) = dst(m2) .
  eq crt(m3) = p2 .
  eq crt(m2) = p2 .

  eq (a = intruder) = false .
  eq sh(b1,b,a,r2,i,c) \in nw(p) = true .
  eq ct(b2,b,a,cert(b,k,sig(ca,b,k))) \in nw(p) = true .
  eq sf(b3,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s)))) \in nw(p) = false .

  eq choice(m2) = c .
  eq list(m1) = l .
  eq c \in l = true .
  eq dst(m2) = a . 
  eq rand(m2) = r2 .
  eq sid(m2) = i .
  eq b = p2 .
  eq b3 = p2 .
  eq rand(m1) = r1 .
  eq pms(epms(m4)) = pms(a,p2,s) .
  
  eq (b1 = p2) = false .
  eq b2 = p2 .
  eq sh(p2,p2,a,r2,i,c) \in nw(p) = false .
  red lm1(m2, sh(p2,p2,a,r2,i,c), nw(p)) implies inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
  implies inv17(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .

  eq src(m2) = p2 .
  eq src(m3) = p2 .
  eq src(m1) = dst(m2) .
  eq src(m4) = dst(m2) .
  eq src(m5) = dst(m2) .
  eq choice(m2) \in list(m1) = true .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq dst(m5) = p2 .
  eq dst(m4) = p2 .
  eq dst(m1) = p2 .
  eq dst(m3) = dst(m2) .
  eq crt(m3) = p2 .
  eq crt(m2) = p2 .

  eq (a = intruder) = false .
  eq sh(b1,b,a,r2,i,c) \in nw(p) = true .
  eq ct(b2,b,a,cert(b,k,sig(ca,b,k))) \in nw(p) = true .
  eq sf(b3,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s)))) \in nw(p) = false .

  eq choice(m2) = c .
  eq list(m1) = l .
  eq c \in l = true .
  eq dst(m2) = a . 
  eq rand(m2) = r2 .
  eq sid(m2) = i .
  eq b = p2 .
  eq b3 = p2 .
  eq rand(m1) = r1 .
  eq pms(epms(m4)) = pms(a,p2,s) .
  
  eq (b1 = p2) = false .
  eq (b2 = p2) = false .
  eq k(p2) = k .
  eq sh(p2,p2,a,r2,i,c) \in nw(p) = true .
  eq ct(p2,p2,a,cert(p2,k,sig(ca,p2,k))) \in nw(p) = true .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
  implies inv17(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .

  eq src(m2) = p2 .
  eq src(m3) = p2 .
  eq src(m1) = dst(m2) .
  eq src(m4) = dst(m2) .
  eq src(m5) = dst(m2) .
  eq choice(m2) \in list(m1) = true .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq dst(m5) = p2 .
  eq dst(m4) = p2 .
  eq dst(m1) = p2 .
  eq dst(m3) = dst(m2) .
  eq crt(m3) = p2 .
  eq crt(m2) = p2 .

  eq (a = intruder) = false .
  eq sh(b1,b,a,r2,i,c) \in nw(p) = true .
  eq ct(b2,b,a,cert(b,k,sig(ca,b,k))) \in nw(p) = true .
  eq sf(b3,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s)))) \in nw(p) = false .

  eq choice(m2) = c .
  eq list(m1) = l .
  eq c \in l = true .
  eq dst(m2) = a . 
  eq rand(m2) = r2 .
  eq sid(m2) = i .
  eq b = p2 .
  eq b3 = p2 .
  eq rand(m1) = r1 .
  eq pms(epms(m4)) = pms(a,p2,s) .
  
  eq (b1 = p2) = false .
  eq (b2 = p2) = false .
  eq k(p2) = k .
  eq sh(p2,p2,a,r2,i,c) \in nw(p) = true .
  eq ct(p2,p2,a,cert(p2,k,sig(ca,p2,k))) \in nw(p) = false .
  red lm1(m3, ct(p2,p2,a,cert(p2,k,sig(ca,p2,k))), nw(p)) implies inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
  implies inv17(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .

  eq src(m2) = p2 .
  eq src(m3) = p2 .
  eq src(m1) = dst(m2) .
  eq src(m4) = dst(m2) .
  eq src(m5) = dst(m2) .
  eq choice(m2) \in list(m1) = true .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq dst(m5) = p2 .
  eq dst(m4) = p2 .
  eq dst(m1) = p2 .
  eq dst(m3) = dst(m2) .
  eq crt(m3) = p2 .
  eq crt(m2) = p2 .

  eq (a = intruder) = false .
  eq sh(b1,b,a,r2,i,c) \in nw(p) = true .
  eq ct(b2,b,a,cert(b,k,sig(ca,b,k))) \in nw(p) = true .
  eq sf(b3,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s)))) \in nw(p) = false .

  eq choice(m2) = c .
  eq list(m1) = l .
  eq c \in l = true .
  eq dst(m2) = a . 
  eq rand(m2) = r2 .
  eq sid(m2) = i .
  eq b = p2 .
  eq b3 = p2 .
  eq rand(m1) = r1 .
  eq pms(epms(m4)) = pms(a,p2,s) .
  
  eq (b1 = p2) = false .
  eq (b2 = p2) = false .
  eq k(p2) = k .
  eq sh(p2,p2,a,r2,i,c) \in nw(p) = false .
  red lm1(m2, sh(p2,p2,a,r2,i,c), nw(p)) implies inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
  implies inv17(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .

  eq src(m2) = p2 .
  eq src(m3) = p2 .
  eq src(m1) = dst(m2) .
  eq src(m4) = dst(m2) .
  eq src(m5) = dst(m2) .
  eq choice(m2) \in list(m1) = true .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq dst(m5) = p2 .
  eq dst(m4) = p2 .
  eq dst(m1) = p2 .
  eq dst(m3) = dst(m2) .
  eq crt(m3) = p2 .
  eq crt(m2) = p2 .

  eq (a = intruder) = false .
  eq sh(b1,b,a,r2,i,c) \in nw(p) = true .
  eq ct(b2,b,a,cert(b,k,sig(ca,b,k))) \in nw(p) = true .
  eq sf(b3,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s)))) \in nw(p) = false .

  eq choice(m2) = c .
  eq list(m1) = l .
  eq c \in l = true .
  eq dst(m2) = a . 
  eq rand(m2) = r2 .
  eq sid(m2) = i .
  eq b = p2 .
  eq b3 = p2 .
  eq rand(m1) = r1 .
  eq pms(epms(m4)) = pms(a,p2,s) .
  
  eq (b1 = p2) = false .
  eq (b2 = p2) = false .
  eq (k(p2) = k) = false .
  eq p2 = intruder .
  eq ct(intruder,intruder,a,cert(intruder,k,sig(ca,intruder,k))) \in nw(p) = true .
  eq sh(intruder,intruder,a,r2,i,c) \in nw(p) = true .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
  implies inv17(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .

  eq src(m2) = p2 .
  eq src(m3) = p2 .
  eq src(m1) = dst(m2) .
  eq src(m4) = dst(m2) .
  eq src(m5) = dst(m2) .
  eq choice(m2) \in list(m1) = true .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq dst(m5) = p2 .
  eq dst(m4) = p2 .
  eq dst(m1) = p2 .
  eq dst(m3) = dst(m2) .
  eq crt(m3) = p2 .
  eq crt(m2) = p2 .

  eq (a = intruder) = false .
  eq sh(b1,b,a,r2,i,c) \in nw(p) = true .
  eq ct(b2,b,a,cert(b,k,sig(ca,b,k))) \in nw(p) = true .
  eq sf(b3,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s)))) \in nw(p) = false .

  eq choice(m2) = c .
  eq list(m1) = l .
  eq c \in l = true .
  eq dst(m2) = a . 
  eq rand(m2) = r2 .
  eq sid(m2) = i .
  eq b = p2 .
  eq b3 = p2 .
  eq rand(m1) = r1 .
  eq pms(epms(m4)) = pms(a,p2,s) .
  
  eq (b1 = p2) = false .
  eq (b2 = p2) = false .
  eq (k(p2) = k) = false .
  eq p2 = intruder .
  eq ct(intruder,intruder,a,cert(intruder,k,sig(ca,intruder,k))) \in nw(p) = true .
  eq sh(intruder,intruder,a,r2,i,c) \in nw(p) = false .
  red lm1(m2, sh(p2,p2,a,r2,i,c), nw(p)) implies inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
  implies inv17(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .

  eq src(m2) = p2 .
  eq src(m3) = p2 .
  eq src(m1) = dst(m2) .
  eq src(m4) = dst(m2) .
  eq src(m5) = dst(m2) .
  eq choice(m2) \in list(m1) = true .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq dst(m5) = p2 .
  eq dst(m4) = p2 .
  eq dst(m1) = p2 .
  eq dst(m3) = dst(m2) .
  eq crt(m3) = p2 .
  eq crt(m2) = p2 .

  eq (a = intruder) = false .
  eq sh(b1,b,a,r2,i,c) \in nw(p) = true .
  eq ct(b2,b,a,cert(b,k,sig(ca,b,k))) \in nw(p) = true .
  eq sf(b3,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s)))) \in nw(p) = false .

  eq choice(m2) = c .
  eq list(m1) = l .
  eq c \in l = true .
  eq dst(m2) = a . 
  eq rand(m2) = r2 .
  eq sid(m2) = i .
  eq b = p2 .
  eq b3 = p2 .
  eq rand(m1) = r1 .
  eq pms(epms(m4)) = pms(a,p2,s) .
  
  eq (b1 = p2) = false .
  eq (b2 = p2) = false .
  eq (k(p2) = k) = false .
  eq p2 = intruder .
  eq ct(intruder,intruder,a,cert(intruder,k,sig(ca,intruder,k))) \in nw(p) = false .
  eq sh(intruder,intruder,a,r2,i,c) \in nw(p) = true .
  eq b2 = intruder .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
  implies inv17(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .

  eq src(m2) = p2 .
  eq src(m3) = p2 .
  eq src(m1) = dst(m2) .
  eq src(m4) = dst(m2) .
  eq src(m5) = dst(m2) .
  eq choice(m2) \in list(m1) = true .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq dst(m5) = p2 .
  eq dst(m4) = p2 .
  eq dst(m1) = p2 .
  eq dst(m3) = dst(m2) .
  eq crt(m3) = p2 .
  eq crt(m2) = p2 .

  eq (a = intruder) = false .
  eq sh(b1,b,a,r2,i,c) \in nw(p) = true .
  eq ct(b2,b,a,cert(b,k,sig(ca,b,k))) \in nw(p) = true .
  eq sf(b3,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s)))) \in nw(p) = false .

  eq choice(m2) = c .
  eq list(m1) = l .
  eq c \in l = true .
  eq dst(m2) = a . 
  eq rand(m2) = r2 .
  eq sid(m2) = i .
  eq b = p2 .
  eq b3 = p2 .
  eq rand(m1) = r1 .
  eq pms(epms(m4)) = pms(a,p2,s) .
  
  eq (b1 = p2) = false .
  eq (b2 = p2) = false .
  eq (k(p2) = k) = false .
  eq p2 = intruder .
  eq ct(intruder,intruder,a,cert(intruder,k,sig(ca,intruder,k))) \in nw(p) = false .
  eq sh(intruder,intruder,a,r2,i,c) \in nw(p) = true .
  eq (b2 = intruder) = false .
  red inv11(p,a,b2,k) implies inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
  implies inv17(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close


open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .

  eq src(m2) = p2 .
  eq src(m3) = p2 .
  eq src(m1) = dst(m2) .
  eq src(m4) = dst(m2) .
  eq src(m5) = dst(m2) .
  eq choice(m2) \in list(m1) = true .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq dst(m5) = p2 .
  eq dst(m4) = p2 .
  eq dst(m1) = p2 .
  eq dst(m3) = dst(m2) .
  eq crt(m3) = p2 .
  eq crt(m2) = p2 .

  eq (a = intruder) = false .
  eq sh(b1,b,a,r2,i,c) \in nw(p) = true .
  eq ct(b2,b,a,cert(b,k,sig(ca,b,k))) \in nw(p) = true .
  eq sf(b3,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s)))) \in nw(p) = false .

  eq choice(m2) = c .
  eq list(m1) = l .
  eq c \in l = true .
  eq dst(m2) = a . 
  eq rand(m2) = r2 .
  eq sid(m2) = i .
  eq b = p2 .
  eq b3 = p2 .
  eq rand(m1) = r1 .
  eq pms(epms(m4)) = pms(a,p2,s) .
  
  eq (b1 = p2) = false .
  eq (b2 = p2) = false .
  eq (k(p2) = k) = false .
  eq p2 = intruder .
  eq ct(intruder,intruder,a,cert(intruder,k,sig(ca,intruder,k))) \in nw(p) = false .
  eq sh(intruder,intruder,a,r2,i,c) \in nw(p) = false .
  red lm1(m2, sh(p2,p2,a,r2,i,c), nw(p)) implies inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
  implies inv17(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .

  eq src(m2) = p2 .
  eq src(m3) = p2 .
  eq src(m1) = dst(m2) .
  eq src(m4) = dst(m2) .
  eq src(m5) = dst(m2) .
  eq choice(m2) \in list(m1) = true .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq dst(m5) = p2 .
  eq dst(m4) = p2 .
  eq dst(m1) = p2 .
  eq dst(m3) = dst(m2) .
  eq crt(m3) = p2 .
  eq crt(m2) = p2 .

  eq (a = intruder) = false .
  eq sh(b1,b,a,r2,i,c) \in nw(p) = true .
  eq ct(b2,b,a,cert(b,k,sig(ca,b,k))) \in nw(p) = true .
  eq sf(b3,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s)))) \in nw(p) = false .

  eq choice(m2) = c .
  eq list(m1) = l .
  eq c \in l = true .
  eq dst(m2) = a . 
  eq rand(m2) = r2 .
  eq sid(m2) = i .
  eq b = p2 .
  eq b3 = p2 .
  eq rand(m1) = r1 .
  eq pms(epms(m4)) = pms(a,p2,s) .
  
  eq (b1 = p2) = false .
  eq (b2 = p2) = false .
  eq (k(p2) = k) = false .
  eq (p2 = intruder) = false .
  eq ct(p2,p2,a,cert(p2,k,sig(ca,p2,k))) \in nw(p) = true .
  eq sh(p2,p2,a,r2,i,c) \in nw(p) = true .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
  implies inv17(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .

  eq src(m2) = p2 .
  eq src(m3) = p2 .
  eq src(m1) = dst(m2) .
  eq src(m4) = dst(m2) .
  eq src(m5) = dst(m2) .
  eq choice(m2) \in list(m1) = true .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq dst(m5) = p2 .
  eq dst(m4) = p2 .
  eq dst(m1) = p2 .
  eq dst(m3) = dst(m2) .
  eq crt(m3) = p2 .
  eq crt(m2) = p2 .

  eq (a = intruder) = false .
  eq sh(b1,b,a,r2,i,c) \in nw(p) = true .
  eq ct(b2,b,a,cert(b,k,sig(ca,b,k))) \in nw(p) = true .
  eq sf(b3,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s)))) \in nw(p) = false .

  eq choice(m2) = c .
  eq list(m1) = l .
  eq c \in l = true .
  eq dst(m2) = a . 
  eq rand(m2) = r2 .
  eq sid(m2) = i .
  eq b = p2 .
  eq b3 = p2 .
  eq rand(m1) = r1 .
  eq pms(epms(m4)) = pms(a,p2,s) .
  
  eq (b1 = p2) = false .
  eq (b2 = p2) = false .
  eq (k(p2) = k) = false .
  eq (p2 = intruder) = false .
  eq ct(p2,p2,a,cert(p2,k,sig(ca,p2,k))) \in nw(p) = true .
  eq sh(p2,p2,a,r2,i,c) \in nw(p) = false .
  red lm1(m2, sh(p2,p2,a,r2,i,c), nw(p)) implies inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
  implies inv17(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .

  eq src(m2) = p2 .
  eq src(m3) = p2 .
  eq src(m1) = dst(m2) .
  eq src(m4) = dst(m2) .
  eq src(m5) = dst(m2) .
  eq choice(m2) \in list(m1) = true .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq dst(m5) = p2 .
  eq dst(m4) = p2 .
  eq dst(m1) = p2 .
  eq dst(m3) = dst(m2) .
  eq crt(m3) = p2 .
  eq crt(m2) = p2 .

  eq (a = intruder) = false .
  eq sh(b1,b,a,r2,i,c) \in nw(p) = true .
  eq ct(b2,b,a,cert(b,k,sig(ca,b,k))) \in nw(p) = true .
  eq sf(b3,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s)))) \in nw(p) = false .

  eq choice(m2) = c .
  eq list(m1) = l .
  eq c \in l = true .
  eq dst(m2) = a . 
  eq rand(m2) = r2 .
  eq sid(m2) = i .
  eq b = p2 .
  eq b3 = p2 .
  eq rand(m1) = r1 .
  eq pms(epms(m4)) = pms(a,p2,s) .
  
  eq (b1 = p2) = false .
  eq (b2 = p2) = false .
  eq (k(p2) = k) = false .
  eq (p2 = intruder) = false .
  eq ct(p2,p2,a,cert(p2,k,sig(ca,p2,k))) \in nw(p) = false .
  eq sig(ca,p2,k) \in csig(nw(p)) = true .
  red inv9(p,b,k) implies inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
  implies inv17(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .

  eq src(m2) = p2 .
  eq src(m3) = p2 .
  eq src(m1) = dst(m2) .
  eq src(m4) = dst(m2) .
  eq src(m5) = dst(m2) .
  eq choice(m2) \in list(m1) = true .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq dst(m5) = p2 .
  eq dst(m4) = p2 .
  eq dst(m1) = p2 .
  eq dst(m3) = dst(m2) .
  eq crt(m3) = p2 .
  eq crt(m2) = p2 .

  eq (a = intruder) = false .
  eq sh(b1,b,a,r2,i,c) \in nw(p) = true .
  eq ct(b2,b,a,cert(b,k,sig(ca,b,k))) \in nw(p) = true .
  eq sf(b3,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s)))) \in nw(p) = false .

  eq choice(m2) = c .
  eq list(m1) = l .
  eq c \in l = true .
  eq dst(m2) = a . 
  eq rand(m2) = r2 .
  eq sid(m2) = i .
  eq b = p2 .
  eq b3 = p2 .
  eq rand(m1) = r1 .
  eq pms(epms(m4)) = pms(a,p2,s) .
  
  eq (b1 = p2) = false .
  eq (b2 = p2) = false .
  eq (k(p2) = k) = false .
  eq (p2 = intruder) = false .
  eq ct(p2,p2,a,cert(p2,k,sig(ca,p2,k))) \in nw(p) = false .
  eq sig(ca,p2,k) \in csig(nw(p)) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
  implies inv17(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .

  eq src(m2) = p2 .
  eq src(m3) = p2 .
  eq src(m1) = dst(m2) .
  eq src(m4) = dst(m2) .
  eq src(m5) = dst(m2) .
  eq choice(m2) \in list(m1) = true .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq dst(m5) = p2 .
  eq dst(m4) = p2 .
  eq dst(m1) = p2 .
  eq dst(m3) = dst(m2) .
  eq crt(m3) = p2 .
  eq crt(m2) = p2 .

  eq (a = intruder) = false .
  eq sh(b1,b,a,r2,i,c) \in nw(p) = true .
  eq ct(b2,b,a,cert(b,k,sig(ca,b,k))) \in nw(p) = true .
  eq sf(b3,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s)))) \in nw(p) = false .

  eq choice(m2) = c .
  eq list(m1) = l .
  eq c \in l = true .
  eq dst(m2) = a . 
  eq rand(m2) = r2 .
  eq sid(m2) = i .
  eq b = p2 .
  eq b3 = p2 .
  eq rand(m1) = r1 .
  eq (pms(epms(m4)) = pms(a,p2,s)) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
  implies inv17(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .

  eq src(m2) = p2 .
  eq src(m3) = p2 .
  eq src(m1) = dst(m2) .
  eq src(m4) = dst(m2) .
  eq src(m5) = dst(m2) .
  eq choice(m2) \in list(m1) = true .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq dst(m5) = p2 .
  eq dst(m4) = p2 .
  eq dst(m1) = p2 .
  eq dst(m3) = dst(m2) .
  eq crt(m3) = p2 .
  eq crt(m2) = p2 .

  eq (a = intruder) = false .
  eq sh(b1,b,a,r2,i,c) \in nw(p) = true .
  eq ct(b2,b,a,cert(b,k,sig(ca,b,k))) \in nw(p) = true .
  eq sf(b3,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s)))) \in nw(p) = false .

  eq choice(m2) = c .
  eq list(m1) = l .
  eq c \in l = true .
  eq dst(m2) = a . 
  eq rand(m2) = r2 .
  eq sid(m2) = i .
  eq b = p2 .
  eq b3 = p2 .
  eq (rand(m1) = r1) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
  implies inv17(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .

  eq src(m2) = p2 .
  eq src(m3) = p2 .
  eq src(m1) = dst(m2) .
  eq src(m4) = dst(m2) .
  eq src(m5) = dst(m2) .
  eq choice(m2) \in list(m1) = true .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq dst(m5) = p2 .
  eq dst(m4) = p2 .
  eq dst(m1) = p2 .
  eq dst(m3) = dst(m2) .
  eq crt(m3) = p2 .
  eq crt(m2) = p2 .

  eq (a = intruder) = false .
  eq sh(b1,b,a,r2,i,c) \in nw(p) = true .
  eq ct(b2,b,a,cert(b,k,sig(ca,b,k))) \in nw(p) = true .
  eq sf(b3,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s)))) \in nw(p) = false .

  eq choice(m2) = c .
  eq list(m1) = l .
  eq c \in l = true .
  eq dst(m2) = a . 
  eq rand(m2) = r2 .
  eq sid(m2) = i .
  eq b = p2 .
  eq (b3 = p2) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
  implies inv17(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .

  eq src(m2) = p2 .
  eq src(m3) = p2 .
  eq src(m1) = dst(m2) .
  eq src(m4) = dst(m2) .
  eq src(m5) = dst(m2) .
  eq choice(m2) \in list(m1) = true .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq dst(m5) = p2 .
  eq dst(m4) = p2 .
  eq dst(m1) = p2 .
  eq dst(m3) = dst(m2) .
  eq crt(m3) = p2 .
  eq crt(m2) = p2 .

  eq (a = intruder) = false .
  eq sh(b1,b,a,r2,i,c) \in nw(p) = true .
  eq ct(b2,b,a,cert(b,k,sig(ca,b,k))) \in nw(p) = true .
  eq sf(b3,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s)))) \in nw(p) = false .

  eq choice(m2) = c .
  eq list(m1) = l .
  eq c \in l = true .
  eq dst(m2) = a . 
  eq rand(m2) = r2 .
  eq sid(m2) = i .
  eq (b = p2) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
  implies inv17(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .

  eq src(m2) = p2 .
  eq src(m3) = p2 .
  eq src(m1) = dst(m2) .
  eq src(m4) = dst(m2) .
  eq src(m5) = dst(m2) .
  eq choice(m2) \in list(m1) = true .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq dst(m5) = p2 .
  eq dst(m4) = p2 .
  eq dst(m1) = p2 .
  eq dst(m3) = dst(m2) .
  eq crt(m3) = p2 .
  eq crt(m2) = p2 .

  eq (a = intruder) = false .
  eq sh(b1,b,a,r2,i,c) \in nw(p) = true .
  eq ct(b2,b,a,cert(b,k,sig(ca,b,k))) \in nw(p) = true .
  eq sf(b3,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s)))) \in nw(p) = false .

  eq choice(m2) = c .
  eq list(m1) = l .
  eq c \in l = true .
  eq dst(m2) = a . 
  eq rand(m2) = r2 .
  eq (sid(m2) = i) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
  implies inv17(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .

  eq src(m2) = p2 .
  eq src(m3) = p2 .
  eq src(m1) = dst(m2) .
  eq src(m4) = dst(m2) .
  eq src(m5) = dst(m2) .
  eq choice(m2) \in list(m1) = true .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq dst(m5) = p2 .
  eq dst(m4) = p2 .
  eq dst(m1) = p2 .
  eq dst(m3) = dst(m2) .
  eq crt(m3) = p2 .
  eq crt(m2) = p2 .

  eq (a = intruder) = false .
  eq sh(b1,b,a,r2,i,c) \in nw(p) = true .
  eq ct(b2,b,a,cert(b,k,sig(ca,b,k))) \in nw(p) = true .
  eq sf(b3,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s)))) \in nw(p) = false .

  eq choice(m2) = c .
  eq list(m1) = l .
  eq c \in l = true .
  eq dst(m2) = a . 
  eq (rand(m2) = r2) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
  implies inv17(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .

  eq src(m2) = p2 .
  eq src(m3) = p2 .
  eq src(m1) = dst(m2) .
  eq src(m4) = dst(m2) .
  eq src(m5) = dst(m2) .
  eq choice(m2) \in list(m1) = true .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq dst(m5) = p2 .
  eq dst(m4) = p2 .
  eq dst(m1) = p2 .
  eq dst(m3) = dst(m2) .
  eq crt(m3) = p2 .
  eq crt(m2) = p2 .

  eq (a = intruder) = false .
  eq sh(b1,b,a,r2,i,c) \in nw(p) = true .
  eq ct(b2,b,a,cert(b,k,sig(ca,b,k))) \in nw(p) = true .
  eq sf(b3,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s)))) \in nw(p) = false .

  eq choice(m2) = c .
  eq list(m1) = l .
  eq c \in l = true .
  eq (dst(m2) = a) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
  implies inv17(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .

  eq src(m2) = p2 .
  eq src(m3) = p2 .
  eq src(m1) = dst(m2) .
  eq src(m4) = dst(m2) .
  eq src(m5) = dst(m2) .
  eq choice(m2) \in list(m1) = true .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq dst(m5) = p2 .
  eq dst(m4) = p2 .
  eq dst(m1) = p2 .
  eq dst(m3) = dst(m2) .
  eq crt(m3) = p2 .
  eq crt(m2) = p2 .

  eq (a = intruder) = false .
  eq sh(b1,b,a,r2,i,c) \in nw(p) = true .
  eq ct(b2,b,a,cert(b,k,sig(ca,b,k))) \in nw(p) = true .
  eq sf(b3,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s)))) \in nw(p) = false .

  eq choice(m2) = c .
  eq list(m1) = l .
  eq c \in l = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
  implies inv17(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .

  eq src(m2) = p2 .
  eq src(m3) = p2 .
  eq src(m1) = dst(m2) .
  eq src(m4) = dst(m2) .
  eq src(m5) = dst(m2) .
  eq choice(m2) \in list(m1) = true .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq dst(m5) = p2 .
  eq dst(m4) = p2 .
  eq dst(m1) = p2 .
  eq dst(m3) = dst(m2) .
  eq crt(m3) = p2 .
  eq crt(m2) = p2 .

  eq (a = intruder) = false .
  eq sh(b1,b,a,r2,i,c) \in nw(p) = true .
  eq ct(b2,b,a,cert(b,k,sig(ca,b,k))) \in nw(p) = true .
  eq sf(b3,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s)))) \in nw(p) = false .

  eq choice(m2) = c .
  eq (list(m1) = l) = false .
  eq c \in list(m1) = true .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
  implies inv17(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .

  eq src(m2) = p2 .
  eq src(m3) = p2 .
  eq src(m1) = dst(m2) .
  eq src(m4) = dst(m2) .
  eq src(m5) = dst(m2) .
  eq choice(m2) \in list(m1) = true .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq dst(m5) = p2 .
  eq dst(m4) = p2 .
  eq dst(m1) = p2 .
  eq dst(m3) = dst(m2) .
  eq crt(m3) = p2 .
  eq crt(m2) = p2 .

  eq (a = intruder) = false .
  eq sh(b1,b,a,r2,i,c) \in nw(p) = true .
  eq ct(b2,b,a,cert(b,k,sig(ca,b,k))) \in nw(p) = true .
  eq sf(b3,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s)))) \in nw(p) = false .

  eq choice(m2) = c .
  eq (list(m1) = l) = false .
  eq c \in list(m1) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
  implies inv17(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .

  eq src(m2) = p2 .
  eq src(m3) = p2 .
  eq src(m1) = dst(m2) .
  eq src(m4) = dst(m2) .
  eq src(m5) = dst(m2) .
  eq choice(m2) \in list(m1) = true .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq dst(m5) = p2 .
  eq dst(m4) = p2 .
  eq dst(m1) = p2 .
  eq dst(m3) = dst(m2) .
  eq crt(m3) = p2 .
  eq crt(m2) = p2 .

  eq (a = intruder) = false .
  eq sh(b1,b,a,r2,i,c) \in nw(p) = true .
  eq ct(b2,b,a,cert(b,k,sig(ca,b,k))) \in nw(p) = true .
  eq sf(b3,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s)))) \in nw(p) = false .

  eq (choice(m2) = c) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
  implies inv17(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .

  eq src(m2) = p2 .
  eq src(m3) = p2 .
  eq src(m1) = dst(m2) .
  eq src(m4) = dst(m2) .
  eq src(m5) = dst(m2) .
  eq choice(m2) \in list(m1) = true .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq dst(m5) = p2 .
  eq dst(m4) = p2 .
  eq dst(m1) = p2 .
  eq dst(m3) = dst(m2) .
  eq crt(m3) = p2 .
  eq crt(m2) = p2 .

  eq (a = intruder) = false .
  eq sh(b1,b,a,r2,i,c) \in nw(p) = true .
  eq ct(b2,b,a,cert(b,k,sig(ca,b,k))) \in nw(p) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
  implies inv17(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .

  eq src(m2) = p2 .
  eq src(m3) = p2 .
  eq src(m1) = dst(m2) .
  eq src(m4) = dst(m2) .
  eq src(m5) = dst(m2) .
  eq choice(m2) \in list(m1) = true .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq dst(m5) = p2 .
  eq dst(m4) = p2 .
  eq dst(m1) = p2 .
  eq dst(m3) = dst(m2) .
  eq crt(m3) = p2 .
  eq crt(m2) = p2 .

  eq (a = intruder) = false .
  eq sh(b1,b,a,r2,i,c) \in nw(p) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
  implies inv17(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .

  eq src(m2) = p2 .
  eq src(m3) = p2 .
  eq src(m1) = dst(m2) .
  eq src(m4) = dst(m2) .
  eq src(m5) = dst(m2) .
  eq choice(m2) \in list(m1) = true .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq dst(m5) = p2 .
  eq dst(m4) = p2 .
  eq dst(m1) = p2 .
  eq dst(m3) = dst(m2) .
  eq crt(m3) = p2 .
  eq (crt(m2) = p2) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
  implies inv17(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .

  eq src(m2) = p2 .
  eq src(m3) = p2 .
  eq src(m1) = dst(m2) .
  eq src(m4) = dst(m2) .
  eq src(m5) = dst(m2) .
  eq choice(m2) \in list(m1) = true .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq dst(m5) = p2 .
  eq dst(m4) = p2 .
  eq dst(m1) = p2 .
  eq dst(m3) = dst(m2) .
  eq (crt(m3) = p2) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
  implies inv17(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .

  eq src(m2) = p2 .
  eq src(m3) = p2 .
  eq src(m1) = dst(m2) .
  eq src(m4) = dst(m2) .
  eq src(m5) = dst(m2) .
  eq choice(m2) \in list(m1) = true .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq dst(m5) = p2 .
  eq dst(m4) = p2 .
  eq dst(m1) = p2 .
  eq (dst(m3) = dst(m2)) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
  implies inv17(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .

  eq src(m2) = p2 .
  eq src(m3) = p2 .
  eq src(m1) = dst(m2) .
  eq src(m4) = dst(m2) .
  eq src(m5) = dst(m2) .
  eq choice(m2) \in list(m1) = true .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq dst(m5) = p2 .
  eq dst(m4) = p2 .
  eq (dst(m1) = p2) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
  implies inv17(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .

  eq src(m2) = p2 .
  eq src(m3) = p2 .
  eq src(m1) = dst(m2) .
  eq src(m4) = dst(m2) .
  eq src(m5) = dst(m2) .
  eq choice(m2) \in list(m1) = true .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq dst(m5) = p2 .
  eq (dst(m4) = p2) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
  implies inv17(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .

  eq src(m2) = p2 .
  eq src(m3) = p2 .
  eq src(m1) = dst(m2) .
  eq src(m4) = dst(m2) .
  eq src(m5) = dst(m2) .
  eq choice(m2) \in list(m1) = true .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq (dst(m5) = p2) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
  implies inv17(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .

  eq src(m2) = p2 .
  eq src(m3) = p2 .
  eq src(m1) = dst(m2) .
  eq src(m4) = dst(m2) .
  eq src(m5) = dst(m2) .
  eq choice(m2) \in list(m1) = true .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq (cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2)))) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
  implies inv17(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .

  eq src(m2) = p2 .
  eq src(m3) = p2 .
  eq src(m1) = dst(m2) .
  eq src(m4) = dst(m2) .
  eq src(m5) = dst(m2) .
  eq choice(m2) \in list(m1) = true .
  eq k(epms(m4)) = k(p2) .
  eq (ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4))))) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
  implies inv17(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .

  eq src(m2) = p2 .
  eq src(m3) = p2 .
  eq src(m1) = dst(m2) .
  eq src(m4) = dst(m2) .
  eq src(m5) = dst(m2) .
  eq choice(m2) \in list(m1) = true .
  eq (k(epms(m4)) = k(p2)) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
  implies inv17(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .

  eq src(m2) = p2 .
  eq src(m3) = p2 .
  eq src(m1) = dst(m2) .
  eq src(m4) = dst(m2) .
  eq src(m5) = dst(m2) .
  eq choice(m2) \in list(m1) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
  implies inv17(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .

  eq src(m2) = p2 .
  eq src(m3) = p2 .
  eq src(m1) = dst(m2) .
  eq src(m4) = dst(m2) .
  eq (src(m5) = dst(m2)) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
  implies inv17(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .

  eq src(m2) = p2 .
  eq src(m3) = p2 .
  eq src(m1) = dst(m2) .
  eq (src(m4) = dst(m2)) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
  implies inv17(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .

  eq src(m2) = p2 .
  eq src(m3) = p2 .
  eq (src(m1) = dst(m2)) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
  implies inv17(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .

  eq src(m2) = p2 .
  eq (src(m3) = p2) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
  implies inv17(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .

  eq (src(m2) = p2) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
  implies inv17(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
  implies inv17(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
  implies inv17(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
  implies inv17(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
  implies inv17(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
  implies inv17(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
  implies inv17(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
  implies inv17(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
  implies inv17(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
  implies inv17(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k)
  implies inv17(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

--> 25) sfin2(p,p2,m1,m2,m3)
open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq dst(m3) = p2 .
  eq sid(m1) = sid(m2) .
  eq ss(p,dst(m2),p2,sid(m2)) = none .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(sfin2(p,p2,m1,m2,m3),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq dst(m3) = p2 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,dst(m2),p2,sid(m2)) = none) = false .
  eq choice(ss(p,dst(m2),p2,sid(m2))) = choice(m2) .
  eq ecfin2(m3) = ecfin2(k(dst(m2),pms(ss(p,dst(m2),p2,sid(m2))),rand(m1),rand(m2)),
                      cfin2(dst(m2),p2,sid(m2),choice(m2),rand(m1),rand(m2),pms(ss(p,dst(m2),p2,sid(m2))))) .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(sfin2(p,p2,m1,m2,m3),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq dst(m3) = p2 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,dst(m2),p2,sid(m2)) = none) = false .
  eq choice(ss(p,dst(m2),p2,sid(m2))) = choice(m2) .
  eq (ecfin2(m3) = ecfin2(k(dst(m2),pms(ss(p,dst(m2),p2,sid(m2))),rand(m1),rand(m2)),
                      cfin2(dst(m2),p2,sid(m2),choice(m2),rand(m1),rand(m2),pms(ss(p,dst(m2),p2,sid(m2)))))) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(sfin2(p,p2,m1,m2,m3),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq dst(m3) = p2 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,dst(m2),p2,sid(m2)) = none) = false .
  eq (choice(ss(p,dst(m2),p2,sid(m2))) = choice(m2)) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(sfin2(p,p2,m1,m2,m3),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq dst(m3) = p2 .
  eq (sid(m1) = sid(m2)) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(sfin2(p,p2,m1,m2,m3),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq (dst(m3) = p2) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(sfin2(p,p2,m1,m2,m3),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq (src(m3) = dst(m2)) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(sfin2(p,p2,m1,m2,m3),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq (dst(m1) = p2) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(sfin2(p,p2,m1,m2,m3),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq (src(m1) = dst(m2)) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(sfin2(p,p2,m1,m2,m3),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq (src(m2) = p2) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(sfin2(p,p2,m1,m2,m3),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq (crt(m2) = p2) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(sfin2(p,p2,m1,m2,m3),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(sfin2(p,p2,m1,m2,m3),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(sfin2(p,p2,m1,m2,m3),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(sfin2(p,p2,m1,m2,m3),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(sfin2(p,p2,m1,m2,m3),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(sfin2(p,p2,m1,m2,m3),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(sfin2(p,p2,m1,m2,m3),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

--> 26) shello(p,p2,r3,i1,c1,m1)
open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = true .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(shello(p,p2,r3,i1,c1,m1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq i1 \in ui(p) = true .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(shello(p,p2,r3,i1,c1,m1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq i1 \in ui(p) = false .
  eq m1 \in nw(p) = true .
  eq ch?(m1) = true .
  eq dst(m1) = p2 .
  eq c1 \in list(m1) = true .
  eq a = intruder .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(shello(p,p2,r3,i1,c1,m1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
  op pms1 : -> Pms .
-- assumptions
  eq r3 \in ur(p) = false .
  eq i1 \in ui(p) = false .
  eq m1 \in nw(p) = true .
  eq ch?(m1) = true .
  eq dst(m1) = p2 .
  eq c1 \in list(m1) = true .
  eq (a = intruder) = false .

  eq ct(b2,b,a,cert(b,k,sig(ca,b,k))) \in nw(p) = true .
  eq sf(b3,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s)))) \in nw(p) = true .
  eq ct(b,b,a,cert(b,k,sig(ca,b,k))) \in nw(p) = true .
  eq sh(b,b,a,r2,i,c) \in nw(p) = true .
  eq sh(b1,b,a,r2,i,c) \in nw(p) = true .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(shello(p,p2,r3,i1,c1,m1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
  op pms1 : -> Pms .
-- assumptions
  eq r3 \in ur(p) = false .
  eq i1 \in ui(p) = false .
  eq m1 \in nw(p) = true .
  eq ch?(m1) = true .
  eq dst(m1) = p2 .
  eq c1 \in list(m1) = true .
  eq (a = intruder) = false .

  eq ct(b2,b,a,cert(b,k,sig(ca,b,k))) \in nw(p) = true .
  eq sf(b3,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s)))) \in nw(p) = true .
  eq ct(b,b,a,cert(b,k,sig(ca,b,k))) \in nw(p) = true .
  eq sh(b,b,a,r2,i,c) \in nw(p) = true .
  eq sh(b1,b,a,r2,i,c) \in nw(p) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(shello(p,p2,r3,i1,c1,m1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
  op pms1 : -> Pms .
-- assumptions
  eq r3 \in ur(p) = false .
  eq i1 \in ui(p) = false .
  eq m1 \in nw(p) = true .
  eq ch?(m1) = true .
  eq dst(m1) = p2 .
  eq c1 \in list(m1) = true .
  eq (a = intruder) = false .

  eq ct(b2,b,a,cert(b,k,sig(ca,b,k))) \in nw(p) = true .
  eq sf(b3,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s)))) \in nw(p) = true .
  eq ct(b,b,a,cert(b,k,sig(ca,b,k))) \in nw(p) = true .
  eq sh(b,b,a,r2,i,c) \in nw(p) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(shello(p,p2,r3,i1,c1,m1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
  op pms1 : -> Pms .
-- assumptions
  eq r3 \in ur(p) = false .
  eq i1 \in ui(p) = false .
  eq m1 \in nw(p) = true .
  eq ch?(m1) = true .
  eq dst(m1) = p2 .
  eq c1 \in list(m1) = true .
  eq (a = intruder) = false .

  eq ct(b2,b,a,cert(b,k,sig(ca,b,k))) \in nw(p) = true .
  eq sf(b3,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s)))) \in nw(p) = true .
  eq ct(b,b,a,cert(b,k,sig(ca,b,k))) \in nw(p) = false .

  eq sh(b1,b,a,r2,i,c) \in nw(p) = true .

  red inv13(p,a,b,b2,r1,r2,l,c,i,s,k) implies inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(shello(p,p2,r3,i1,c1,m1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
  op pms1 : -> Pms .
-- assumptions
  eq r3 \in ur(p) = false .
  eq i1 \in ui(p) = false .
  eq m1 \in nw(p) = true .
  eq ch?(m1) = true .
  eq dst(m1) = p2 .
  eq c1 \in list(m1) = true .
  eq (a = intruder) = false .

  eq ct(b2,b,a,cert(b,k,sig(ca,b,k))) \in nw(p) = true .
  eq sf(b3,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s)))) \in nw(p) = true .
  eq ct(b,b,a,cert(b,k,sig(ca,b,k))) \in nw(p) = false .

  eq sh(b1,b,a,r2,i,c) \in nw(p) = false .
  
  eq sf(b,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))))\in nw(p) = true .
 
  red inv13(p,a,b,b2,r1,r2,l,c,i,s,k) implies inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(shello(p,p2,r3,i1,c1,m1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
  op pms1 : -> Pms .
-- assumptions
  eq r3 \in ur(p) = false .
  eq i1 \in ui(p) = false .
  eq m1 \in nw(p) = true .
  eq ch?(m1) = true .
  eq dst(m1) = p2 .
  eq c1 \in list(m1) = true .
  eq (a = intruder) = false .

  eq ct(b2,b,a,cert(b,k,sig(ca,b,k))) \in nw(p) = true .
  eq sf(b3,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s)))) \in nw(p) = true .
  eq ct(b,b,a,cert(b,k,sig(ca,b,k))) \in nw(p) = false .

  eq sh(b1,b,a,r2,i,c) \in nw(p) = false .

  eq sf(b,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))))\in nw(p) = false .

  red inv3(p,a,b,b3,r1,r2,l,c,i,s) implies inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(shello(p,p2,r3,i1,c1,m1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
  op pms1 : -> Pms .
-- assumptions
  eq r3 \in ur(p) = false .
  eq i1 \in ui(p) = false .
  eq m1 \in nw(p) = true .
  eq ch?(m1) = true .
  eq dst(m1) = p2 .
  eq c1 \in list(m1) = true .
  eq (a = intruder) = false .

  eq ct(b2,b,a,cert(b,k,sig(ca,b,k))) \in nw(p) = true .
  eq sf(b3,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s)))) \in nw(p) = false .

  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(shello(p,p2,r3,i1,c1,m1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
  op pms1 : -> Pms .
-- assumptions
  eq r3 \in ur(p) = false .
  eq i1 \in ui(p) = false .
  eq m1 \in nw(p) = true .
  eq ch?(m1) = true .
  eq dst(m1) = p2 .
  eq c1 \in list(m1) = true .
  eq (a = intruder) = false .

  eq ct(b2,b,a,cert(b,k,sig(ca,b,k))) \in nw(p) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(shello(p,p2,r3,i1,c1,m1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq i1 \in ui(p) = false .
  eq m1 \in nw(p) = true .
  eq ch?(m1) = true .
  eq dst(m1) = p2 .
  eq c1 \in list(m1) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(shello(p,p2,r3,i1,c1,m1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq i1 \in ui(p) = false .
  eq m1 \in nw(p) = true .
  eq ch?(m1) = true .
  eq (dst(m1) = p2) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(shello(p,p2,r3,i1,c1,m1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq i1 \in ui(p) = false .
  eq m1 \in nw(p) = true .
  eq ch?(m1) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(shello(p,p2,r3,i1,c1,m1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq i1 \in ui(p) = false .
  eq m1 \in nw(p) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(shello(p,p2,r3,i1,c1,m1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

--> 27) shello2(p,p2,r3,m1)
open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = true .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(shello2(p,p2,r3,m1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq m1 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq dst(m1) = p2 .
  eq ss(p,src(m1),p2,sid(m1)) = none .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(shello2(p,p2,r3,m1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq m1 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq dst(m1) = p2 .
  eq (ss(p,src(m1),p2,sid(m1)) = none) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(shello2(p,p2,r3,m1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq m1 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq (dst(m1) = p2) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(shello2(p,p2,r3,m1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq m1 \in nw(p) = true .
  eq ch2?(m1) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(shello2(p,p2,r3,m1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(inv17)
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq m1 \in nw(p) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(shello2(p,p2,r3,m1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close
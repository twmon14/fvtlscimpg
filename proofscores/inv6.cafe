-- I) Base case
open INV .
  :id(inv6)
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  red inv6(init,a,b,r1,r2,c,i,s) .
close

-- II) Inductive cases
--> 1) cert(p,p2,m1,m2)
open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  -- eq c-cert(p,p2,m1,m2) = true .  
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq dst(m1) = p2 .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq choice(m2) \in list(m1) = true .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(cert(p,p2,m1,m2),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq dst(m1) = p2 .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq choice(m2) \in list(m1) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(cert(p,p2,m1,m2),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq dst(m1) = p2 .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq (src(m1) = dst(m2)) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(cert(p,p2,m1,m2),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq dst(m1) = p2 .
  eq crt(m2) = p2 .
  eq (src(m2) = p2) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(cert(p,p2,m1,m2),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq dst(m1) = p2 .
  eq (crt(m2) = p2) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(cert(p,p2,m1,m2),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq (dst(m1) = p2) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(cert(p,p2,m1,m2),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(cert(p,p2,m1,m2),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(cert(p,p2,m1,m2),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(cert(p,p2,m1,m2),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(cert(p,p2,m1,m2),a,b,r1,r2,c,i,s) .
close

--> 2) cfin(p,p1,s1,m1,m2,m3,m4) 
open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  -- eq c-cfin(p,p1,s1,m1,m2,m3,m4)  = true .
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq sig(cert(m3)) = sig(ca,dst(m1),pubkey(cert(m3))) .
  eq epms(m4) = epms(pubkey(cert(m3)),pms(p1,dst(m1),s1)) .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(cfin(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq sig(cert(m3)) = sig(ca,dst(m1),pubkey(cert(m3))) .
  eq (epms(m4) = epms(pubkey(cert(m3)),pms(p1,dst(m1),s1))) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(cfin(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq (sig(cert(m3)) = sig(ca,dst(m1),pubkey(cert(m3)))) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(cfin(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq (server(cert(m3)) = dst(m1)) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(cfin(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(cfin(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq (dst(m3) = p1) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(cfin(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq (src(m3) = dst(m1)) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(cfin(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq (dst(m2) = p1) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(cfin(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq (src(m2) = dst(m1)) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(cfin(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq (dst(m4) = dst(m1)) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(cfin(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq (src(m4) = p1) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(cfin(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq (crt(m4) = p1) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(cfin(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq (src(m1) = p1) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(cfin(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq (crt(m1) = p1) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(cfin(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(cfin(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(cfin(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(cfin(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(cfin(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(cfin(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(cfin(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(cfin(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(cfin(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,c,i,s) .
close

--> 3) cfin2(p,p1,s1,m1,m2)
open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq sid(m1) = sid(m2) .
  eq ss(p,p1,dst(m1),sid(m2)) = none .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(cfin2(p,p1,s1,m1,m2),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,p1,dst(m1),sid(m2)) = none) = false .
  eq choice(ss(p,p1,dst(m1),sid(m2))) = choice(m2) .
  eq pms(ss(p,p1,dst(m1),sid(m2))) = pms(p1,dst(m1),s1) .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(cfin2(p,p1,s1,m1,m2),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,p1,dst(m1),sid(m2)) = none) = false .
  eq choice(ss(p,p1,dst(m1),sid(m2))) = choice(m2) .
  eq (pms(ss(p,p1,dst(m1),sid(m2))) = pms(p1,dst(m1),s1)) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(cfin2(p,p1,s1,m1,m2),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,p1,dst(m1),sid(m2)) = none) = false .
  eq (choice(ss(p,p1,dst(m1),sid(m2))) = choice(m2)) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(cfin2(p,p1,s1,m1,m2),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq (sid(m1) = sid(m2)) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(cfin2(p,p1,s1,m1,m2),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq (dst(m2) = p1) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(cfin2(p,p1,s1,m1,m2),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq (src(m2) = dst(m1)) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(cfin2(p,p1,s1,m1,m2),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq crt(m1) = p1 .
  eq (src(m1) = p1) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(cfin2(p,p1,s1,m1,m2),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq (crt(m1) = p1) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(cfin2(p,p1,s1,m1,m2),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(cfin2(p,p1,s1,m1,m2),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(cfin2(p,p1,s1,m1,m2),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(cfin2(p,p1,s1,m1,m2),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(cfin2(p,p1,s1,m1,m2),a,b,r1,r2,c,i,s) .
close

--> 4) chello(p,p1,p2,r3,l1)
open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op l1 : -> ListOfChoices .
  eq (r3 \in ur(p)) = true .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(chello(p,p1,p2,r3,l1),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op l1 : -> ListOfChoices .
  eq (r3 \in ur(p)) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(chello(p,p1,p2,r3,l1),a,b,r1,r2,c,i,s) .
close

--> 5) chello2(p,p1,p2,s1,r3,i1) 
open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op s1 : -> Secret .
  op r3 : -> Rand .
  op i1 : -> Sid .
-- assumptions
  eq r3 \in ur(p) = true .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(chello2(p,p1,p2,s1,r3,i1),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op s1 : -> Secret .
  op r3 : -> Rand .
  op i1 : -> Sid .
-- assumptions
  eq r3 \in ur(p) = false .
  eq ss(p,p1,p2,i1) = none .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(chello2(p,p1,p2,s1,r3,i1),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op s1 : -> Secret .
  op r3 : -> Rand .
  op i1 : -> Sid .
-- assumptions
  eq r3 \in ur(p) = false .
  eq (ss(p,p1,p2,i1) = none) = false .
  eq pms(ss(p,p1,p2,i1)) = pms(p1,p2,s1) .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(chello2(p,p1,p2,s1,r3,i1),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op s1 : -> Secret .
  op r3 : -> Rand .
  op i1 : -> Sid .
-- assumptions
  eq r3 \in ur(p) = false .
  eq (ss(p,p1,p2,i1) = none) = false .
  eq (pms(ss(p,p1,p2,i1)) = pms(p1,p2,s1)) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(chello2(p,p1,p2,s1,r3,i1),a,b,r1,r2,c,i,s) .
close

--> 6) compl(p,p1,s1,m1,m2,m3,m4,m5,m6) 
open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq src(m6) = dst(m1) .
  eq dst(m6) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq sig(cert(m3)) = sig(ca,server(cert(m3)),pubkey(cert(m3))) .
  eq epms(m4) = epms(pubkey(cert(m3)),pms(p1,dst(m1),s1)) .
  eq ecfin(m5) = ecfin(k(p1,pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(p1,dst(m1),sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq esfin(m6) = esfin(k(dst(m1),pms(epms(m4)),rand(m1),rand(m2)),
                      sfin(p1,dst(m1),sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq src(m6) = dst(m1) .
  eq dst(m6) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq sig(cert(m3)) = sig(ca,server(cert(m3)),pubkey(cert(m3))) .
  eq epms(m4) = epms(pubkey(cert(m3)),pms(p1,dst(m1),s1)) .
  eq ecfin(m5) = ecfin(k(p1,pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(p1,dst(m1),sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq (esfin(m6) = esfin(k(dst(m1),pms(epms(m4)),rand(m1),rand(m2)),
                      sfin(p1,dst(m1),sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4))))) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq src(m6) = dst(m1) .
  eq dst(m6) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq sig(cert(m3)) = sig(ca,server(cert(m3)),pubkey(cert(m3))) .
  eq epms(m4) = epms(pubkey(cert(m3)),pms(p1,dst(m1),s1)) .
  eq (ecfin(m5) = ecfin(k(p1,pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(p1,dst(m1),sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4))))) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq src(m6) = dst(m1) .
  eq dst(m6) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq sig(cert(m3)) = sig(ca,server(cert(m3)),pubkey(cert(m3))) .
  eq (epms(m4) = epms(pubkey(cert(m3)),pms(p1,dst(m1),s1))) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq src(m6) = dst(m1) .
  eq dst(m6) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq (sig(cert(m3)) = sig(ca,server(cert(m3)),pubkey(cert(m3)))) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq src(m6) = dst(m1) .
  eq dst(m6) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq (server(cert(m3)) = dst(m1)) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq src(m6) = dst(m1) .
  eq dst(m6) = p1 .
  eq choice(m2) \in list(m1) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq src(m6) = dst(m1) .
  eq (dst(m6) = p1) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq (src(m6) = dst(m1)) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq (dst(m3) = p1) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq (src(m3) = dst(m1)) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq (dst(m2) = p1) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq (src(m2) = dst(m1)) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq (dst(m5) = dst(m1)) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq (src(m5) = p1) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq (crt(m5) = p1) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq (dst(m4) = dst(m1)) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq (src(m4) = p1) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq (crt(m4) = p1) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq (src(m1) = p1) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq (crt(m1) = p1) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,c,i,s) .
close

--> 7) compl2(p,p1,s1,m1,m2,m3,m4)
open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m4) = dst(m1) .
  eq dst(m4) = p1 .
  eq sid(m1) = sid(m2) .
  eq ss(p,p1,dst(m1),sid(m2)) = none .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m4) = dst(m1) .
  eq dst(m4) = p1 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,p1,dst(m1),sid(m2)) = none) = false .
  eq choice(ss(p,p1,dst(m1),sid(m2))) = choice(m2) .
  eq pms(ss(p,p1,dst(m1),sid(m2))) = pms(p1,dst(m1),s1) .
  eq ecfin2(m3) = ecfin2(k(p1,pms(p1,dst(m1),s1),rand(m1),rand(m2)),
                      cfin2(p1,dst(m1),sid(m2),choice(m2),rand(m1),rand(m2),pms(p1,dst(m1),s1))) .
  eq esfin2(m4) = esfin2(k(dst(m1),pms(p1,dst(m1),s1),rand(m1),rand(m2)),
                        sfin2(p1,dst(m1),sid(m2),choice(m2),rand(m1),rand(m2),pms(p1,dst(m1),s1))) .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m4) = dst(m1) .
  eq dst(m4) = p1 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,p1,dst(m1),sid(m2)) = none) = false .
  eq choice(ss(p,p1,dst(m1),sid(m2))) = choice(m2) .
  eq pms(ss(p,p1,dst(m1),sid(m2))) = pms(p1,dst(m1),s1) .
  eq ecfin2(m3) = ecfin2(k(p1,pms(p1,dst(m1),s1),rand(m1),rand(m2)),
                      cfin2(p1,dst(m1),sid(m2),choice(m2),rand(m1),rand(m2),pms(p1,dst(m1),s1))) .
  eq (esfin2(m4) = esfin2(k(dst(m1),pms(p1,dst(m1),s1),rand(m1),rand(m2)),
                        sfin2(p1,dst(m1),sid(m2),choice(m2),rand(m1),rand(m2),pms(p1,dst(m1),s1)))) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m4) = dst(m1) .
  eq dst(m4) = p1 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,p1,dst(m1),sid(m2)) = none) = false .
  eq choice(ss(p,p1,dst(m1),sid(m2))) = choice(m2) .
  eq pms(ss(p,p1,dst(m1),sid(m2))) = pms(p1,dst(m1),s1) .
  eq (ecfin2(m3) = ecfin2(k(p1,pms(p1,dst(m1),s1),rand(m1),rand(m2)),
                      cfin2(p1,dst(m1),sid(m2),choice(m2),rand(m1),rand(m2),pms(p1,dst(m1),s1)))) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m4) = dst(m1) .
  eq dst(m4) = p1 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,p1,dst(m1),sid(m2)) = none) = false .
  eq choice(ss(p,p1,dst(m1),sid(m2))) = choice(m2) .
  eq (pms(ss(p,p1,dst(m1),sid(m2))) = pms(p1,dst(m1),s1)) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m4) = dst(m1) .
  eq dst(m4) = p1 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,p1,dst(m1),sid(m2)) = none) = false .
  eq (choice(ss(p,p1,dst(m1),sid(m2))) = choice(m2)) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m4) = dst(m1) .
  eq dst(m4) = p1 .
  eq (sid(m1) = sid(m2)) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m4) = dst(m1) .
  eq (dst(m4) = p1) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq (src(m4) = dst(m1)) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq (dst(m2) = p1) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq (src(m2) = dst(m1)) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq (dst(m3) = dst(m1)) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq (src(m3) = p1) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq (crt(m3) = p1) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq (src(m1) = p1) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq (crt(m1) = p1) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,c,i,s) .
close

--> 8) fakeCert(p,p2,p1,pk,g)
open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq g \in csig(nw(p)) = true .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(fakeCert(p,p2,p1,pk,g),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq g \in csig(nw(p)) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(fakeCert(p,p2,p1,pk,g),a,b,r1,r2,c,i,s) .
close

--> 9) fakeCfin1(p,p1,p2,ecfin1)
open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op ecfin1 : -> EncCFin .
-- assumptions
  eq ecfin1 \in cecfin(nw(p)) = true .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(fakeCfin1(p,p1,p2,ecfin1),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op ecfin1 : -> EncCFin .
-- assumptions
  eq ecfin1 \in cecfin(nw(p)) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(fakeCfin1(p,p1,p2,ecfin1),a,b,r1,r2,c,i,s) .
close

--> 10) fakeCfin2(p,p1,p2,i1,l1,c1,r3,r4,pms1)
open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op l1 : -> ListOfChoices .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(fakeCfin2(p,p1,p2,i1,l1,c1,r3,r4,pms1),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op l1 : -> ListOfChoices .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(fakeCfin2(p,p1,p2,i1,l1,c1,r3,r4,pms1),a,b,r1,r2,c,i,s) .
close

--> 11) fakeCfin21(p,p1,p2,ecfin21)
open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op ecfin21 : -> EncCFin2 .
-- assumptions
  eq ecfin21 \in cecfin2(nw(p)) = true .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(fakeCfin21(p,p1,p2,ecfin21),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op ecfin21 : -> EncCFin2 .
-- assumptions
  eq ecfin21 \in cecfin2(nw(p)) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(fakeCfin21(p,p1,p2,ecfin21),a,b,r1,r2,c,i,s) .
close

--> 12) fakeCfin22(p,p1,p2,i1,c1,r3,r4,pms1)
open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(fakeCfin22(p,p1,p2,i1,c1,r3,r4,pms1),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(fakeCfin22(p,p1,p2,i1,c1,r3,r4,pms1),a,b,r1,r2,c,i,s) .
close

--> 13) fakeChello(p,p1,p2,r3,l1) 
open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op l1 : -> ListOfChoices .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(fakeChello(p,p1,p2,r3,l1),a,b,r1,r2,c,i,s) .
close

--> 14) fakeChello2(p,p1,p2,r3,i1) 
open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(fakeChello2(p,p1,p2,r3,i1),a,b,r1,r2,c,i,s) .
close

--> 15) fakeKexch1(p,p1,p2,epms1) 
open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op epms1 : -> EncPms .
-- assumptions
  eq epms1 \in cepms(nw(p)) = true .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(fakeKexch1(p,p1,p2,epms1),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op epms1 : -> EncPms .
-- assumptions
  eq epms1 \in cepms(nw(p)) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(fakeKexch1(p,p1,p2,epms1),a,b,r1,r2,c,i,s) .
close

--> 16) fakeKexch2(p,p1,p2,pk,pms1)
open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(fakeKexch2(p,p1,p2,pk,pms1),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(fakeKexch2(p,p1,p2,pk,pms1),a,b,r1,r2,c,i,s) .
close

--> 17) fakeSfin1(p,p2,p1,esfin1)
open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin1 : -> EncSFin .
-- assumptions
  eq esfin1 \in cesfin(nw(p)) = true .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(fakeSfin1(p,p2,p1,esfin1),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin1 : -> EncSFin .
-- assumptions
  eq esfin1 \in cesfin(nw(p)) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(fakeSfin1(p,p2,p1,esfin1),a,b,r1,r2,c,i,s) .
close

--> 18) fakeSfin2(p,p2,p1,i1,l1,c1,r3,r4,pms1)
open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op l1 : -> ListOfChoices .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(fakeSfin2(p,p2,p1,i1,l1,c1,r3,r4,pms1),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op l1 : -> ListOfChoices .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(fakeSfin2(p,p2,p1,i1,l1,c1,r3,r4,pms1),a,b,r1,r2,c,i,s) .
close

--> 19) fakeSfin21(p,p2,p1,esfin21)
open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin21 : -> EncSFin2 .
-- assumptions
  eq esfin21 = esfin2(k(b,pms(a,b,s),r1,r2),sfin2(a,b,i,c,r1,r2,pms(a,b,s))) .
  eq esfin2(k(b,pms(a,b,s),r1,r2),sfin2(a,b,i,c,r1,r2,pms(a,b,s)))\in cesfin2(nw(p)) = true .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(fakeSfin21(p,p2,p1,esfin21),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin21 : -> EncSFin2 .
-- assumptions
  eq esfin21 = esfin2(k(b,pms(a,b,s),r1,r2),sfin2(a,b,i,c,r1,r2,pms(a,b,s))) .
  eq esfin2(k(b,pms(a,b,s),r1,r2),sfin2(a,b,i,c,r1,r2,pms(a,b,s)))\in cesfin2(nw(p)) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(fakeSfin21(p,p2,p1,esfin21),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin21 : -> EncSFin2 .
-- assumptions
  eq (esfin21 = esfin2(k(b,pms(a,b,s),r1,r2),sfin2(a,b,i,c,r1,r2,pms(a,b,s)))) = false .
  eq esfin21 \in cesfin2(nw(p)) = true .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(fakeSfin21(p,p2,p1,esfin21),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin21 : -> EncSFin2 .
-- assumptions
  eq (esfin21 = esfin2(k(b,pms(a,b,s),r1,r2),sfin2(a,b,i,c,r1,r2,pms(a,b,s)))) = false .
  eq esfin21 \in cesfin2(nw(p)) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(fakeSfin21(p,p2,p1,esfin21),a,b,r1,r2,c,i,s) .
close

--> 20) fakeSfin22(p,p2,p1,i1,c1,r3,r4,pms1)
open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .

  eq r3 = r1 .
  eq p1 = a .
  eq i1 = i .
  eq c1 = c .
  eq p2 = b .
  eq pms1 = pms(a,b,s) .
  eq r4 = r2 .
  --
  eq intruder = b .
  eq pms(a,b,s) \in cpms(nw(p)) = true .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(fakeSfin22(p,p2,p1,i1,c1,r3,r4,pms1),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .

  eq r3 = r1 .
  eq p1 = a .
  eq i1 = i .
  eq c1 = c .
  eq p2 = b .
  eq pms1 = pms(a,b,s) .
  eq r4 = r2 .
  --
  eq intruder = b .
  eq pms(a,b,s) \in cpms(nw(p)) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(fakeSfin22(p,p2,p1,i1,c1,r3,r4,pms1),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .

  eq r3 = r1 .
  eq p1 = a .
  eq i1 = i .
  eq c1 = c .
  eq p2 = b .
  eq pms1 = pms(a,b,s) .
  eq r4 = r2 .
  --
  eq (intruder = b) = false .
  eq a = intruder .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(fakeSfin22(p,p2,p1,i1,c1,r3,r4,pms1),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .

  eq r3 = r1 .
  eq p1 = a .
  eq i1 = i .
  eq c1 = c .
  eq p2 = b .
  eq pms1 = pms(a,b,s) .
  eq r4 = r2 .
  --
  eq (intruder = b) = false .
  eq (a = intruder) = false .

  eq pms (a,b,s)\in cpms(nw(p)) = true .
  red inv1(p,pms(a,b,s)) implies inv6(p,a,b,r1,r2,c,i,s) implies inv6(fakeSfin22(p,p2,p1,i1,c1,r3,r4,pms1),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .

  eq r3 = r1 .
  eq p1 = a .
  eq i1 = i .
  eq c1 = c .
  eq p2 = b .
  eq pms1 = pms(a,b,s) .
  eq r4 = r2 .
  --
  eq (intruder = b) = false .
  eq (a = intruder) = false .

  eq pms (a,b,s)\in cpms(nw(p)) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(fakeSfin22(p,p2,p1,i1,c1,r3,r4,pms1),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .

  eq r3 = r1 .
  eq p1 = a .
  eq i1 = i .
  eq c1 = c .
  eq p2 = b .
  eq pms1 = pms(a,b,s) .
  eq (r4 = r2) = false .
  --
  eq a = intruder .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(fakeSfin22(p,p2,p1,i1,c1,r3,r4,pms1),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .

  eq r3 = r1 .
  eq p1 = a .
  eq i1 = i .
  eq c1 = c .
  eq p2 = b .
  eq pms1 = pms(a,b,s) .
  eq (r4 = r2) = false .
  --
  eq (a = intruder) = false .
  eq pms (a,b,s) \in cpms(nw(p)) = true .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(fakeSfin22(p,p2,p1,i1,c1,r3,r4,pms1),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .

  eq r3 = r1 .
  eq p1 = a .
  eq i1 = i .
  eq c1 = c .
  eq p2 = b .
  eq pms1 = pms(a,b,s) .
  eq (r4 = r2) = false .
  --
  eq (a = intruder) = false .
  eq pms (a,b,s) \in cpms(nw(p)) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(fakeSfin22(p,p2,p1,i1,c1,r3,r4,pms1),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .

  eq r3 = r1 .
  eq p1 = a .
  eq i1 = i .
  eq c1 = c .
  eq p2 = b .
  eq (pms1 = pms(a,b,s)) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(fakeSfin22(p,p2,p1,i1,c1,r3,r4,pms1),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .

  eq r3 = r1 .
  eq p1 = a .
  eq i1 = i .
  eq c1 = c .
  eq (p2 = b) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(fakeSfin22(p,p2,p1,i1,c1,r3,r4,pms1),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .

  eq r3 = r1 .
  eq p1 = a .
  eq i1 = i .
  eq (c1 = c) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(fakeSfin22(p,p2,p1,i1,c1,r3,r4,pms1),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .

  eq r3 = r1 .
  eq p1 = a .
  eq (i1 = i) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(fakeSfin22(p,p2,p1,i1,c1,r3,r4,pms1),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .

  eq r3 = r1 .
  eq (p1 = a) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(fakeSfin22(p,p2,p1,i1,c1,r3,r4,pms1),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .

  eq (r3 = r1) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(fakeSfin22(p,p2,p1,i1,c1,r3,r4,pms1),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(fakeSfin22(p,p2,p1,i1,c1,r3,r4,pms1),a,b,r1,r2,c,i,s) .
close

--> 21) fakeShello(p,p2,p1,r3,i1,c1)
open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(fakeShello(p,p2,p1,r3,i1,c1),a,b,r1,r2,c,i,s) .
close

--> 22) fakeShello2(p,p2,p1,r3,i1,c1)
open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(fakeShello2(p,p2,p1,r3,i1,c1),a,b,r1,r2,c,i,s) .
close

--> 23) kexch(p,p1,s1,m1,m2,m3)
open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = true .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(kexch(p,p1,s1,m1,m2,m3),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq sig(cert(m3)) = sig(ca,dst(m1),pubkey(cert(m3))) .
--
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(kexch(p,p1,s1,m1,m2,m3),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq (sig(cert(m3)) = sig(ca,dst(m1),pubkey(cert(m3)))) = false .
--
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(kexch(p,p1,s1,m1,m2,m3),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq (server(cert(m3)) = dst(m1)) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(kexch(p,p1,s1,m1,m2,m3),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(kexch(p,p1,s1,m1,m2,m3),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq (dst(m3) = p1) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(kexch(p,p1,s1,m1,m2,m3),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq (src(m3) = dst(m1)) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(kexch(p,p1,s1,m1,m2,m3),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq (dst(m2) = p1) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(kexch(p,p1,s1,m1,m2,m3),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq (src(m2) = dst(m1)) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(kexch(p,p1,s1,m1,m2,m3),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq (src(m1) = p1) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(kexch(p,p1,s1,m1,m2,m3),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq (crt(m1) = p1) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(kexch(p,p1,s1,m1,m2,m3),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(kexch(p,p1,s1,m1,m2,m3),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(kexch(p,p1,s1,m1,m2,m3),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(kexch(p,p1,s1,m1,m2,m3),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(kexch(p,p1,s1,m1,m2,m3),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(kexch(p,p1,s1,m1,m2,m3),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(kexch(p,p1,s1,m1,m2,m3),a,b,r1,r2,c,i,s) .
close

--> 24) sfin(p,p2,m1,m2,m3,m4,m5) 
open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq (ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4))))) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq (k(epms(m4)) = k(p2)) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq (cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2)))) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq (dst(m5) = p2) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq (src(m5) = dst(m2)) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq (dst(m4) = p2) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq (src(m4) = dst(m2)) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq (dst(m1) = p2) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq (src(m1) = dst(m2)) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq (dst(m3) = dst(m2)) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq (src(m3) = p2) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq (crt(m3) = p2) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq (src(m2) = p2) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq (crt(m2) = p2) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,c,i,s) .
close

--> 25) sfin2(p,p2,m1,m2,m3)
open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq dst(m3) = p2 .
  eq sid(m1) = sid(m2) .
  eq ss(p,dst(m2),p2,sid(m2)) = none .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(sfin2(p,p2,m1,m2,m3),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq dst(m3) = p2 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,dst(m2),p2,sid(m2)) = none) = false .
  eq choice(ss(p,dst(m2),p2,sid(m2))) = choice(m2) .
  eq ecfin2(m3) = ecfin2(k(dst(m2),pms(ss(p,dst(m2),p2,sid(m2))),rand(m1),rand(m2)),
                      cfin2(dst(m2),p2,sid(m2),choice(m2),rand(m1),rand(m2),pms(ss(p,dst(m2),p2,sid(m2))))) .

  eq r1 = rand(m1) .
  eq a = dst(m2) .
  eq i = sid(m2) .
  eq c = choice(m2) .
  eq b = p2 .
  eq r2 = rand(m2) .
  eq pms(ss(p,dst(m2),p2,sid(m2))) = pms(dst(m2),p2,s) .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(sfin2(p,p2,m1,m2,m3),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq dst(m3) = p2 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,dst(m2),p2,sid(m2)) = none) = false .
  eq choice(ss(p,dst(m2),p2,sid(m2))) = choice(m2) .
  eq ecfin2(m3) = ecfin2(k(dst(m2),pms(ss(p,dst(m2),p2,sid(m2))),rand(m1),rand(m2)),
                      cfin2(dst(m2),p2,sid(m2),choice(m2),rand(m1),rand(m2),pms(ss(p,dst(m2),p2,sid(m2))))) .

  eq r1 = rand(m1) .
  eq a = dst(m2) .
  eq i = sid(m2) .
  eq c = choice(m2) .
  eq b = p2 .
  eq r2 = rand(m2) .
  eq (pms(ss(p,dst(m2),p2,sid(m2))) = pms(dst(m2),p2,s)) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(sfin2(p,p2,m1,m2,m3),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq dst(m3) = p2 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,dst(m2),p2,sid(m2)) = none) = false .
  eq choice(ss(p,dst(m2),p2,sid(m2))) = choice(m2) .
  eq ecfin2(m3) = ecfin2(k(dst(m2),pms(ss(p,dst(m2),p2,sid(m2))),rand(m1),rand(m2)),
                      cfin2(dst(m2),p2,sid(m2),choice(m2),rand(m1),rand(m2),pms(ss(p,dst(m2),p2,sid(m2))))) .

  eq r1 = rand(m1) .
  eq a = dst(m2) .
  eq i = sid(m2) .
  eq c = choice(m2) .
  eq b = p2 .
  eq (r2 = rand(m2)) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(sfin2(p,p2,m1,m2,m3),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq dst(m3) = p2 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,dst(m2),p2,sid(m2)) = none) = false .
  eq choice(ss(p,dst(m2),p2,sid(m2))) = choice(m2) .
  eq ecfin2(m3) = ecfin2(k(dst(m2),pms(ss(p,dst(m2),p2,sid(m2))),rand(m1),rand(m2)),
                      cfin2(dst(m2),p2,sid(m2),choice(m2),rand(m1),rand(m2),pms(ss(p,dst(m2),p2,sid(m2))))) .

  eq r1 = rand(m1) .
  eq a = dst(m2) .
  eq i = sid(m2) .
  eq c = choice(m2) .
  eq (b = p2) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(sfin2(p,p2,m1,m2,m3),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq dst(m3) = p2 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,dst(m2),p2,sid(m2)) = none) = false .
  eq choice(ss(p,dst(m2),p2,sid(m2))) = choice(m2) .
  eq ecfin2(m3) = ecfin2(k(dst(m2),pms(ss(p,dst(m2),p2,sid(m2))),rand(m1),rand(m2)),
                      cfin2(dst(m2),p2,sid(m2),choice(m2),rand(m1),rand(m2),pms(ss(p,dst(m2),p2,sid(m2))))) .

  eq r1 = rand(m1) .
  eq a = dst(m2) .
  eq i = sid(m2) .
  eq (c = choice(m2)) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(sfin2(p,p2,m1,m2,m3),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq dst(m3) = p2 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,dst(m2),p2,sid(m2)) = none) = false .
  eq choice(ss(p,dst(m2),p2,sid(m2))) = choice(m2) .
  eq ecfin2(m3) = ecfin2(k(dst(m2),pms(ss(p,dst(m2),p2,sid(m2))),rand(m1),rand(m2)),
                      cfin2(dst(m2),p2,sid(m2),choice(m2),rand(m1),rand(m2),pms(ss(p,dst(m2),p2,sid(m2))))) .

  eq r1 = rand(m1) .
  eq a = dst(m2) .
  eq (i = sid(m2)) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(sfin2(p,p2,m1,m2,m3),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq dst(m3) = p2 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,dst(m2),p2,sid(m2)) = none) = false .
  eq choice(ss(p,dst(m2),p2,sid(m2))) = choice(m2) .
  eq ecfin2(m3) = ecfin2(k(dst(m2),pms(ss(p,dst(m2),p2,sid(m2))),rand(m1),rand(m2)),
                      cfin2(dst(m2),p2,sid(m2),choice(m2),rand(m1),rand(m2),pms(ss(p,dst(m2),p2,sid(m2))))) .

  eq r1 = rand(m1) .
  eq (a = dst(m2)) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(sfin2(p,p2,m1,m2,m3),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq dst(m3) = p2 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,dst(m2),p2,sid(m2)) = none) = false .
  eq choice(ss(p,dst(m2),p2,sid(m2))) = choice(m2) .
  eq ecfin2(m3) = ecfin2(k(dst(m2),pms(ss(p,dst(m2),p2,sid(m2))),rand(m1),rand(m2)),
                      cfin2(dst(m2),p2,sid(m2),choice(m2),rand(m1),rand(m2),pms(ss(p,dst(m2),p2,sid(m2))))) .

  eq (r1 = rand(m1)) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(sfin2(p,p2,m1,m2,m3),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq dst(m3) = p2 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,dst(m2),p2,sid(m2)) = none) = false .
  eq choice(ss(p,dst(m2),p2,sid(m2))) = choice(m2) .
  eq (ecfin2(m3) = ecfin2(k(dst(m2),pms(ss(p,dst(m2),p2,sid(m2))),rand(m1),rand(m2)),
                      cfin2(dst(m2),p2,sid(m2),choice(m2),rand(m1),rand(m2),pms(ss(p,dst(m2),p2,sid(m2)))))) = false .

  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(sfin2(p,p2,m1,m2,m3),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq dst(m3) = p2 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,dst(m2),p2,sid(m2)) = none) = false .
  eq (choice(ss(p,dst(m2),p2,sid(m2))) = choice(m2)) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(sfin2(p,p2,m1,m2,m3),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq dst(m3) = p2 .
  eq (sid(m1) = sid(m2)) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(sfin2(p,p2,m1,m2,m3),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq (dst(m3) = p2) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(sfin2(p,p2,m1,m2,m3),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq (src(m3) = dst(m2)) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(sfin2(p,p2,m1,m2,m3),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq (dst(m1) = p2) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(sfin2(p,p2,m1,m2,m3),a,b,r1,r2,c,i,s) .
close



open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq (src(m1) = dst(m2)) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(sfin2(p,p2,m1,m2,m3),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq (src(m2) = p2) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(sfin2(p,p2,m1,m2,m3),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq (crt(m2) = p2) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(sfin2(p,p2,m1,m2,m3),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(sfin2(p,p2,m1,m2,m3),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(sfin2(p,p2,m1,m2,m3),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(sfin2(p,p2,m1,m2,m3),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(sfin2(p,p2,m1,m2,m3),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(sfin2(p,p2,m1,m2,m3),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(sfin2(p,p2,m1,m2,m3),a,b,r1,r2,c,i,s) .
close

--> 26) shello(p,p2,r3,i1,c1,m1)
open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = true .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(shello(p,p2,r3,i1,c1,m1),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq i1 \in ui(p) = true .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(shello(p,p2,r3,i1,c1,m1),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq i1 \in ui(p) = false .
  eq m1 \in nw(p) = true .
  eq ch?(m1) = true .
  eq dst(m1) = p2 .
  eq c1 \in list(m1) = true .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(shello(p,p2,r3,i1,c1,m1),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq i1 \in ui(p) = false .
  eq m1 \in nw(p) = true .
  eq ch?(m1) = true .
  eq dst(m1) = p2 .
  eq c1 \in list(m1) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(shello(p,p2,r3,i1,c1,m1),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq i1 \in ui(p) = false .
  eq m1 \in nw(p) = true .
  eq ch?(m1) = true .
  eq (dst(m1) = p2) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(shello(p,p2,r3,i1,c1,m1),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq i1 \in ui(p) = false .
  eq m1 \in nw(p) = true .
  eq ch?(m1) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(shello(p,p2,r3,i1,c1,m1),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq i1 \in ui(p) = false .
  eq m1 \in nw(p) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(shello(p,p2,r3,i1,c1,m1),a,b,r1,r2,c,i,s) .
close

--> 27) shello2(p,p2,r3,m1)
open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = true .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(shello2(p,p2,r3,m1),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq m1 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq dst(m1) = p2 .
  eq ss(p,src(m1),p2,sid(m1)) = none .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(shello2(p,p2,r3,m1),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq m1 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq dst(m1) = p2 .
  eq (ss(p,src(m1),p2,sid(m1)) = none) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(shello2(p,p2,r3,m1),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq m1 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq (dst(m1) = p2) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(shello2(p,p2,r3,m1),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq m1 \in nw(p) = true .
  eq ch2?(m1) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(shello2(p,p2,r3,m1),a,b,r1,r2,c,i,s) .
close

open INV .
  :id(inv6)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq m1 \in nw(p) = false .
  red inv6(p,a,b,r1,r2,c,i,s) implies inv6(shello2(p,p2,r3,m1),a,b,r1,r2,c,i,s) .
close

-- Q.E.D.